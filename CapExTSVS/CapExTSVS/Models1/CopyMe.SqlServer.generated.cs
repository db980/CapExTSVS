//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1572, 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Reflection;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Configuration;
using LinqToDB.Data;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : CapExTS
	/// Data Source    : DESKTOP-H2DSLGF
	/// Server Version : 15.00.2000
	/// </summary>
	public partial class CapExTSDB : LinqToDB.Data.DataConnection
	{
		public ITable<AA1>                                   AA1                                   { get { return this.GetTable<AA1>(); } }
		public ITable<CapexComBUMaster>                      CapexComBUMasters                     { get { return this.GetTable<CapexComBUMaster>(); } }
		public ITable<CapexConversation>                     CapexConversations                    { get { return this.GetTable<CapexConversation>(); } }
		public ITable<CapexDrawingAttachment>                CapexDrawingAttachments               { get { return this.GetTable<CapexDrawingAttachment>(); } }
		public ITable<CapexEmployeeCompanyMapping>           CapexEmployeeCompanyMappings          { get { return this.GetTable<CapexEmployeeCompanyMapping>(); } }
		public ITable<CapexEmployeePurposeLimit>             CapexEmployeePurposeLimits            { get { return this.GetTable<CapexEmployeePurposeLimit>(); } }
		public ITable<CapexExpBudgetMaster>                  CapexExpBudgetMasters                 { get { return this.GetTable<CapexExpBudgetMaster>(); } }
		public ITable<CapexFAttachment>                      CapexFAttachments                     { get { return this.GetTable<CapexFAttachment>(); } }
		public ITable<CapexInitRecipient>                    CapexInitRecipients                   { get { return this.GetTable<CapexInitRecipient>(); } }
		public ITable<CapexMaster>                           CapexMasters                          { get { return this.GetTable<CapexMaster>(); } }
		public ITable<CapexMaster101023>                     CapexMaster101023                     { get { return this.GetTable<CapexMaster101023>(); } }
		public ITable<CapexMaster231123>                     CapexMaster231123                     { get { return this.GetTable<CapexMaster231123>(); } }
		public ITable<CapexMasterItem>                       CapexMasterItems                      { get { return this.GetTable<CapexMasterItem>(); } }
		public ITable<CapexMasterItemVendorQuotation>        CapexMasterItemVendorQuotations       { get { return this.GetTable<CapexMasterItemVendorQuotation>(); } }
		public ITable<CapexMasterLog>                        CapexMasterLogs                       { get { return this.GetTable<CapexMasterLog>(); } }
		public ITable<CapexNature>                           CapexNatures                          { get { return this.GetTable<CapexNature>(); } }
		public ITable<CapexPayApprovalCat>                   CapexPayApprovalCats                  { get { return this.GetTable<CapexPayApprovalCat>(); } }
		public ITable<CapexPayApprovalCatEmpMapping>         CapexPayApprovalCatEmpMappings        { get { return this.GetTable<CapexPayApprovalCatEmpMapping>(); } }
		public ITable<CapexPayApprovalCatEmpMapping03102023> CapexPayApprovalCatEmpMapping03102023 { get { return this.GetTable<CapexPayApprovalCatEmpMapping03102023>(); } }
		public ITable<CapexPlant>                            CapexPlants                           { get { return this.GetTable<CapexPlant>(); } }
		public ITable<CapexPurchReqMapping>                  CapexPurchReqMappings                 { get { return this.GetTable<CapexPurchReqMapping>(); } }
		public ITable<CapexReturnRejectRemark>               CapexReturnRejectRemarks              { get { return this.GetTable<CapexReturnRejectRemark>(); } }
		public ITable<CapexRightsMaster>                     CapexRightsMasters                    { get { return this.GetTable<CapexRightsMaster>(); } }
		public ITable<CapexStatus>                           CapexStatus                           { get { return this.GetTable<CapexStatus>(); } }
		public ITable<CapexTypeMaster>                       CapexTypeMasters                      { get { return this.GetTable<CapexTypeMaster>(); } }
		public ITable<CapexUserRightsMaster>                 CapexUserRightsMasters                { get { return this.GetTable<CapexUserRightsMaster>(); } }
		public ITable<CapexViewOnlyEMPRoleMapping>           CapexViewOnlyEMPRoleMappings          { get { return this.GetTable<CapexViewOnlyEMPRoleMapping>(); } }
		public ITable<IndentMaster>                          IndentMasters                         { get { return this.GetTable<IndentMaster>(); } }
		public ITable<IndentMaster09102023>                  IndentMaster09102023                  { get { return this.GetTable<IndentMaster09102023>(); } }
		public ITable<IndentMasterLog>                       IndentMasterLogs                      { get { return this.GetTable<IndentMasterLog>(); } }
		public ITable<IndentPayApprovalCatEmpMapping>        IndentPayApprovalCatEmpMappings       { get { return this.GetTable<IndentPayApprovalCatEmpMapping>(); } }
		public ITable<IndID>                                 IndIds                                { get { return this.GetTable<IndID>(); } }
		public ITable<Temp>                                  Temps                                 { get { return this.GetTable<Temp>(); } }
		public ITable<Tempcap03>                             Tempcap03                             { get { return this.GetTable<Tempcap03>(); } }
		public ITable<TempDtLineItem001>                     TempDtLineItem001                     { get { return this.GetTable<TempDtLineItem001>(); } }
		public ITable<TestCapexPayApprovalCatEmpMapping>     TestCapexPayApprovalCatEmpMappings    { get { return this.GetTable<TestCapexPayApprovalCatEmpMapping>(); } }
		public ITable<UserMasterTemp>                        UserMasterTemps                       { get { return this.GetTable<UserMasterTemp>(); } }
		public ITable<VendorMaster>                          VendorMasters                         { get { return this.GetTable<VendorMaster>(); } }

		public CapExTSDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public CapExTSDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		//public CapExTSDB(LinqToDbConnectionOptions options)
		//	: base(options)
		//{
		//	InitDataContext();
		//	InitMappingSchema();
		//}

		//public CapExTSDB(LinqToDbConnectionOptions<CapExTSDB> options)
		//	: base(options)
		//{
		//	InitDataContext();
		//	InitMappingSchema();
		//}

		partial void InitDataContext  ();
		partial void InitMappingSchema();

		#region Table Functions

		#region CapexFunSelApprovalMaterixByReq

		[Sql.TableFunction(Schema="dbo", Name="CapexFun_SelApprovalMaterixByReq")]
		public ITable<CapexFunSelApprovalMaterixByReqResult> CapexFunSelApprovalMaterixByReq(string @RequestNo)
		{
			return this.GetTable<CapexFunSelApprovalMaterixByReqResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@RequestNo);
		}

		public partial class CapexFunSelApprovalMaterixByReqResult
		{
			public string DEPARTMENT_Lvl_1 { get; set; }
			public string FINANCE_Lvl_3    { get; set; }
			public string DEPARTMENT_Lvl_2 { get; set; }
			public string FINANCE_Lvl_4    { get; set; }
			public string FINANCE_Lvl_5    { get; set; }
			public string MD_Lvl_6         { get; set; }
		}

		#endregion

		#region CapexFunSelApprovalMaterixByReqDELETE

		[Sql.TableFunction(Schema="dbo", Name="CapexFun_SelApprovalMaterixByReqDELETE")]
		public ITable<CapexFunSelApprovalMaterixByReqDELETEResult> CapexFunSelApprovalMaterixByReqDELETE(string @RequestNo)
		{
			return this.GetTable<CapexFunSelApprovalMaterixByReqDELETEResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@RequestNo);
		}

		public partial class CapexFunSelApprovalMaterixByReqDELETEResult
		{
			public string DEPARTMENT_Lvl_1 { get; set; }
			public string FINANCE_Lvl_3    { get; set; }
			public string DEPARTMENT_Lvl_2 { get; set; }
			public string FINANCE_Lvl_4    { get; set; }
			public string FINANCE_Lvl_5    { get; set; }
			public string MD_Lvl_6         { get; set; }
		}

		#endregion

		#region CapexFunSelApprovalMaterixByReqdrop

		[Sql.TableFunction(Schema="dbo", Name="CapexFun_SelApprovalMaterixByReqdrop")]
		public ITable<CapexFunSelApprovalMaterixByReqdropResult> CapexFunSelApprovalMaterixByReqdrop(string @RequestNo)
		{
			return this.GetTable<CapexFunSelApprovalMaterixByReqdropResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@RequestNo);
		}

		public partial class CapexFunSelApprovalMaterixByReqdropResult
		{
			public string DEPARTMENT_Lvl_1 { get; set; }
			public string FINANCE_Lvl_3    { get; set; }
			public string DEPARTMENT_Lvl_2 { get; set; }
			public string FINANCE_Lvl_4    { get; set; }
			public string FINANCE_Lvl_5    { get; set; }
			public string MD_Lvl_6         { get; set; }
		}

		#endregion

		#region FunGetCapexidbyforView

		[Sql.TableFunction(Schema="dbo", Name="Fun_getCapexidbyforView")]
		public ITable<FunGetCapexidbyforViewResult> FunGetCapexidbyforView(string @userid)
		{
			return this.GetTable<FunGetCapexidbyforViewResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@userid);
		}

		public partial class FunGetCapexidbyforViewResult
		{
			public string userid  { get; set; }
			public string CapexID { get; set; }
		}

		#endregion

		#region Split

		[Sql.TableFunction(Schema="dbo", Name="Split")]
		public ITable<SplitResult> Split(string @String, char? @Delimiter)
		{
			return this.GetTable<SplitResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@String,
				@Delimiter);
		}

		public partial class SplitResult
		{
			public long   nameIndex { get; set; }
			public string items     { get; set; }
		}

		#endregion

		#endregion
	}

	[Table(Schema="dbo", Name="AA1", IsView=true)]
	public partial class AA1
	{
		[Column, NotNull    ] public string PlantCode { get; set; } // varchar(10)
		[Column,    Nullable] public string PlantDes  { get; set; } // varchar(150)
	}

	[Table(Schema="dbo", Name="Capex_ComBUMaster")]
	public partial class CapexComBUMaster
	{
		[Column(),            Identity              ] public int    IndID    { get; set; } // int
		[Column("Comp_code"), PrimaryKey(1), NotNull] public string CompCode { get; set; } // varchar(10)
		[Column(),               Nullable           ] public string Des      { get; set; } // varchar(100)
		[Column(),            PrimaryKey(2), NotNull] public string BU       { get; set; } // varchar(100)
		[Column(),               Nullable           ] public bool?  Status   { get; set; } // bit
	}

	[Table(Schema="dbo", Name="CapexConversation")]
	public partial class CapexConversation
	{
		[Identity          ] public int       ConId      { get; set; } // int
		[Column,   Nullable] public int?      CapexID    { get; set; } // int
		[Column,   Nullable] public string    Remarks    { get; set; } // nvarchar(max)
		[Column,   Nullable] public string    FileName   { get; set; } // nvarchar(max)
		[Column,   Nullable] public string    PostedBy   { get; set; } // varchar(20)
		[Column,   Nullable] public DateTime? PostedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="Capex_drawing_attachment")]
	public partial class CapexDrawingAttachment
	{
		[Column("fileid"),   Identity   ] public decimal   Fileid           { get; set; } // numeric(18, 0)
		[Column(),              Nullable] public string    CapexID          { get; set; } // varchar(50)
		[Column("filepth"),     Nullable] public string    Filepth          { get; set; } // varchar(500)
		[Column(),              Nullable] public string    DrawingCapexName { get; set; } // varchar(500)
		[Column(),              Nullable] public string    Remarks          { get; set; } // varchar(500)
		[Column(),              Nullable] public string    FileCode         { get; set; } // varchar(350)
		[Column(),              Nullable] public string    AssignedTo       { get; set; } // varchar(10)
		[Column(),              Nullable] public DateTime? AssignedDate     { get; set; } // datetime
		[Column(),              Nullable] public string    CreatedBY        { get; set; } // varchar(20)
		[Column(),              Nullable] public DateTime? CreatedDate      { get; set; } // datetime
		[Column("isActive"), NotNull    ] public bool      IsActive         { get; set; } // bit
		[Column(),              Nullable] public string    UpdatedBY        { get; set; } // varchar(20)
		[Column(),              Nullable] public DateTime? UpdartedDate     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="Capex_EmployeeCompanyMapping")]
	public partial class CapexEmployeeCompanyMapping
	{
		[Identity          ] public int       Id          { get; set; } // int
		[Column,   Nullable] public string    EmpCode     { get; set; } // nvarchar(20)
		[Column,   Nullable] public string    CompanyIds  { get; set; } // nvarchar(50)
		[Column,   Nullable] public string    CreatedBy   { get; set; } // nvarchar(20)
		[Column,   Nullable] public DateTime? CreatedDate { get; set; } // datetime
		[Column,   Nullable] public string    UpdatedBy   { get; set; } // nvarchar(20)
		[Column,   Nullable] public DateTime? UpdatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CapexEmployeePurposeLimit")]
	public partial class CapexEmployeePurposeLimit
	{
		[Column,    Nullable] public string    Grid            { get; set; } // varchar(50)
		[Column,    Nullable] public int?      MaxLimit        { get; set; } // int
		[Column,    Nullable] public int?      InteractiveCost { get; set; } // int
		[Column,    Nullable] public string    CapexType       { get; set; } // varchar(50)
		[Column, NotNull    ] public bool      IsActive        { get; set; } // bit
		[Column,    Nullable] public DateTime? CreatedDate     { get; set; } // datetime
		[Column,    Nullable] public string    CreatedBy       { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? UpdatedDate     { get; set; } // datetime
		[Column,    Nullable] public string    UpdatedBy       { get; set; } // varchar(50)
	}

	[Table(Schema="dbo", Name="Capex_ExpBudgetMaster")]
	public partial class CapexExpBudgetMaster
	{
		[Column(),     Nullable] public string EType { get; set; } // varchar(50)
		[Column(),     Nullable] public string Btype { get; set; } // varchar(50)
		[Column("st"), Nullable] public bool?  St    { get; set; } // bit
	}

	[Table(Schema="dbo", Name="Capex_f_attachment")]
	public partial class CapexFAttachment
	{
		[Column("fileid"),  PrimaryKey, Identity] public decimal   Fileid           { get; set; } // numeric(18, 0)
		[Column("filepth"), Nullable            ] public string    Filepth          { get; set; } // varchar(500)
		[Column(),          Nullable            ] public string    FileCode         { get; set; } // varchar(350)
		[Column("moddate"), Nullable            ] public DateTime? Moddate          { get; set; } // datetime
		[Column("userid"),  Nullable            ] public string    Userid           { get; set; } // varchar(50)
		[Column(),          Nullable            ] public string    FileType         { get; set; } // varchar(100)
		[Column(),          Nullable            ] public string    CapexID          { get; set; } // varchar(50)
		[Column(),          Nullable            ] public decimal?  QuotationAmount  { get; set; } // decimal(18, 2)
		[Column(),          Nullable            ] public string    TnC              { get; set; } // nvarchar(max)
		[Column(),          Nullable            ] public bool?     IsActive         { get; set; } // bit
		[Column(),          Nullable            ] public DateTime? CreateDate       { get; set; } // datetime
		[Column(),          Nullable            ] public string    CreatedBy        { get; set; } // varchar(10)
		[Column(),          Nullable            ] public DateTime? UpdatedDate      { get; set; } // datetime
		[Column(),          Nullable            ] public string    UpdatedBy        { get; set; } // varchar(10)
		[Column(),          Nullable            ] public string    PaymentTerm      { get; set; } // varchar(50)
		[Column(),          Nullable            ] public string    Delivery         { get; set; } // varchar(50)
		[Column(),          Nullable            ] public string    Fright           { get; set; } // varchar(50)
		[Column(),          Nullable            ] public string    InstallationCost { get; set; } // varchar(50)
		[Column(),          Nullable            ] public string    Remarks          { get; set; } // varchar(500)
	}

	[Table(Schema="dbo", Name="Capex_InitRecipients")]
	public partial class CapexInitRecipient
	{
		[PrimaryKey(1), NotNull    ] public string    RequestorCode  { get; set; } // varchar(20)
		[PrimaryKey(2), NotNull    ] public string    RecipientsCode { get; set; } // varchar(20)
		[PrimaryKey(3), NotNull    ] public bool      IsActive       { get; set; } // bit
		[Column,           Nullable] public DateTime? MappedDate     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CapexMaster")]
	public partial class CapexMaster
	{
		[Column(),                           PrimaryKey,  Identity] public int       RequestNo                 { get; set; } // int
		[Column(),                              Nullable          ] public string    Assettype                 { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public string    OldAssetCode              { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public string    CapexType                 { get; set; } // varchar(50)
		[Column("empcode"),                     Nullable          ] public string    Empcode                   { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public string    Grid                      { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public string    ReqType                   { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public decimal?  MaxLimit                  { get; set; } // decimal(18, 2)
		[Column(),                              Nullable          ] public string    FixedAssetsType           { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public string    PName                     { get; set; } // varchar(500)
		[Column(),                              Nullable          ] public string    PDescription              { get; set; } // varchar(500)
		[Column(),                              Nullable          ] public string    CapitalExpenseAsset       { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public string    Purpose                   { get; set; } // varchar(500)
		[Column(),                              Nullable          ] public DateTime? EdateCompletion           { get; set; } // datetime
		[Column(),                              Nullable          ] public string    PurchaseLocation          { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public decimal?  AmountPerUnit             { get; set; } // decimal(18, 2)
		[Column(),                              Nullable          ] public decimal?  NoofUnits                 { get; set; } // decimal(18, 2)
		[Column(),                              Nullable          ] public decimal?  TotalValueInINR           { get; set; } // decimal(18, 2)
		[Column(),                              Nullable          ] public string    SelectQuote               { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public string    ImportedIndigenous        { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public string    VendorJustification       { get; set; } // varchar(500)
		[Column(),                              Nullable          ] public int?      Status                    { get; set; } // int
		[Column("DEPARTMENT_Lvl_1"),            Nullable          ] public string    DepartmentLvl1            { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_1_Date"),       Nullable          ] public DateTime? DepartmentLvl1Date        { get; set; } // datetime
		[Column("DEPARTMENT_Lvl_1_Remarks"),    Nullable          ] public string    DepartmentLvl1Remarks     { get; set; } // varchar(500)
		[Column("DEPARTMENT_Lvl_2"),            Nullable          ] public string    DepartmentLvl2            { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_2_Date"),       Nullable          ] public DateTime? DepartmentLvl2Date        { get; set; } // datetime
		[Column("DEPARTMENT_Lvl_2_Remarks"),    Nullable          ] public string    DepartmentLvl2Remarks     { get; set; } // varchar(500)
		[Column("FINANCE_Lvl_3"),               Nullable          ] public string    FinanceLvl3               { get; set; } // varchar(10)
		[Column("FINANCE_Lvl_3_Date"),          Nullable          ] public DateTime? FinanceLvl3Date           { get; set; } // datetime
		[Column("FINANCE_Lvl_3_Remarks"),       Nullable          ] public string    FinanceLvl3Remarks        { get; set; } // varchar(500)
		[Column("FINANCEF_Lvl_4"),              Nullable          ] public string    FinancefLvl4              { get; set; } // varchar(10)
		[Column("FINANCEF_Lvl_4_Date"),         Nullable          ] public DateTime? FinancefLvl4Date          { get; set; } // datetime
		[Column("FINANCEF_Lvl_4_Remarks"),      Nullable          ] public string    FinancefLvl4Remarks       { get; set; } // varchar(500)
		[Column("FINANCE_Lvl_5"),               Nullable          ] public string    FinanceLvl5               { get; set; } // varchar(10)
		[Column("FINANCE_Lvl_5_Date"),          Nullable          ] public DateTime? FinanceLvl5Date           { get; set; } // datetime
		[Column("FINANCE_Lvl_5_Remarks"),       Nullable          ] public string    FinanceLvl5Remarks        { get; set; } // varchar(500)
		[Column("MD_Lvl_6"),                    Nullable          ] public string    MdLvl6                    { get; set; } // varchar(10)
		[Column("MD_Lvl_6_Date"),               Nullable          ] public DateTime? MdLvl6Date                { get; set; } // datetime
		[Column("MD_Lvl_6_Remarks"),            Nullable          ] public string    MdLvl6Remarks             { get; set; } // varchar(500)
		[Column(),                           NotNull              ] public DateTime  CreateDate                { get; set; } // datetime
		[Column(),                              Nullable          ] public string    CreatedBy                 { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public DateTime? UpdatedDate               { get; set; } // datetime
		[Column(),                              Nullable          ] public string    UpdatedBy                 { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public string    RejectedBy                { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public DateTime? RejectedDate              { get; set; } // datetime
		[Column(),                              Nullable          ] public string    RejectedRemarks           { get; set; } // varchar(500)
		[Column(),                              Nullable          ] public string    ReturnedBy                { get; set; } // varchar(50)
		[Column(),                              Nullable          ] public DateTime? ReturnedDate              { get; set; } // datetime
		[Column(),                              Nullable          ] public string    ReturnedRemarks           { get; set; } // varchar(500)
		[Column(),                              Nullable          ] public decimal?  MiscExpenses              { get; set; } // decimal(18, 2)
		[Column("bugtchkAssignto"),             Nullable          ] public string    BugtchkAssignto           { get; set; } // varchar(10)
		[Column("bugtchkAssignedDate"),         Nullable          ] public DateTime? BugtchkAssignedDate       { get; set; } // datetime
		[Column("bugtchkAssignBy"),             Nullable          ] public string    BugtchkAssignBy           { get; set; } // varchar(10)
		[Column("isbugtchkStatus"),          NotNull              ] public bool      IsbugtchkStatus           { get; set; } // bit
		[Column("bugtRStatus"),                 Nullable          ] public string    BugtRStatus               { get; set; } // varchar(50)
		[Column("bugtRStatusBy"),               Nullable          ] public string    BugtRStatusBy             { get; set; } // varchar(10)
		[Column("bugtRStatusDate"),             Nullable          ] public DateTime? BugtRStatusDate           { get; set; } // datetime
		[Column(),                              Nullable          ] public DateTime? ApprovedDate              { get; set; } // datetime
		[Column(),                              Nullable          ] public DateTime? CWIPCreatedDate           { get; set; } // datetime
		[Column(),                              Nullable          ] public int?      IndentID                  { get; set; } // int
		[Column(),                              Nullable          ] public string    Benefit                   { get; set; } // varchar(500)
		[Column(),                              Nullable          ] public string    IRRPaybackPeriod          { get; set; } // varchar(250)
		[Column(),                              Nullable          ] public string    ProjectedCashOutflow      { get; set; } // varchar(250)
		[Column(),                              Nullable          ] public string    IRRPaybackPeriodValue     { get; set; } // nvarchar(500)
		[Column(),                              Nullable          ] public string    ProjectedCashOutflowValue { get; set; } // nvarchar(500)
		[Column(),                              Nullable          ] public decimal?  CfcAmount                 { get; set; } // decimal(18, 2)
	}

	[Table(Schema="dbo", Name="CapexMaster101023")]
	public partial class CapexMaster101023
	{
		[Column(),                           Identity   ] public int       RequestNo             { get; set; } // int
		[Column(),                              Nullable] public string    Assettype             { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    OldAssetCode          { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    CapexType             { get; set; } // varchar(50)
		[Column("empcode"),                     Nullable] public string    Empcode               { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    Grid                  { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    ReqType               { get; set; } // varchar(50)
		[Column(),                              Nullable] public decimal?  MaxLimit              { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public string    FixedAssetsType       { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    PName                 { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    PDescription          { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    CapitalExpenseAsset   { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    Purpose               { get; set; } // varchar(500)
		[Column(),                              Nullable] public DateTime? EdateCompletion       { get; set; } // datetime
		[Column(),                              Nullable] public string    PurchaseLocation      { get; set; } // varchar(50)
		[Column(),                              Nullable] public decimal?  AmountPerUnit         { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public decimal?  NoofUnits             { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public decimal?  TotalValueInINR       { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public string    SelectQuote           { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    ImportedIndigenous    { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    VendorJustification   { get; set; } // varchar(500)
		[Column(),                              Nullable] public int?      Status                { get; set; } // int
		[Column("DEPARTMENT_Lvl_1"),            Nullable] public string    DepartmentLvl1        { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_1_Date"),       Nullable] public DateTime? DepartmentLvl1Date    { get; set; } // datetime
		[Column("DEPARTMENT_Lvl_1_Remarks"),    Nullable] public string    DepartmentLvl1Remarks { get; set; } // varchar(500)
		[Column("DEPARTMENT_Lvl_2"),            Nullable] public string    DepartmentLvl2        { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_2_Date"),       Nullable] public DateTime? DepartmentLvl2Date    { get; set; } // datetime
		[Column("DEPARTMENT_Lvl_2_Remarks"),    Nullable] public string    DepartmentLvl2Remarks { get; set; } // varchar(500)
		[Column("FINANCE_Lvl_3"),               Nullable] public string    FinanceLvl3           { get; set; } // varchar(10)
		[Column("FINANCE_Lvl_3_Date"),          Nullable] public DateTime? FinanceLvl3Date       { get; set; } // datetime
		[Column("FINANCE_Lvl_3_Remarks"),       Nullable] public string    FinanceLvl3Remarks    { get; set; } // varchar(500)
		[Column("FINANCEF_Lvl_4"),              Nullable] public string    FinancefLvl4          { get; set; } // varchar(10)
		[Column("FINANCEF_Lvl_4_Date"),         Nullable] public DateTime? FinancefLvl4Date      { get; set; } // datetime
		[Column("FINANCEF_Lvl_4_Remarks"),      Nullable] public string    FinancefLvl4Remarks   { get; set; } // varchar(500)
		[Column("FINANCE_Lvl_5"),               Nullable] public string    FinanceLvl5           { get; set; } // varchar(10)
		[Column("FINANCE_Lvl_5_Date"),          Nullable] public DateTime? FinanceLvl5Date       { get; set; } // datetime
		[Column("FINANCE_Lvl_5_Remarks"),       Nullable] public string    FinanceLvl5Remarks    { get; set; } // varchar(500)
		[Column("MD_Lvl_6"),                    Nullable] public string    MdLvl6                { get; set; } // varchar(10)
		[Column("MD_Lvl_6_Date"),               Nullable] public DateTime? MdLvl6Date            { get; set; } // datetime
		[Column("MD_Lvl_6_Remarks"),            Nullable] public string    MdLvl6Remarks         { get; set; } // varchar(500)
		[Column(),                           NotNull    ] public DateTime  CreateDate            { get; set; } // datetime
		[Column(),                              Nullable] public string    CreatedBy             { get; set; } // varchar(50)
		[Column(),                              Nullable] public DateTime? UpdatedDate           { get; set; } // datetime
		[Column(),                              Nullable] public string    UpdatedBy             { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    RejectedBy            { get; set; } // varchar(50)
		[Column(),                              Nullable] public DateTime? RejectedDate          { get; set; } // datetime
		[Column(),                              Nullable] public string    RejectedRemarks       { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    ReturnedBy            { get; set; } // varchar(50)
		[Column(),                              Nullable] public DateTime? ReturnedDate          { get; set; } // datetime
		[Column(),                              Nullable] public string    ReturnedRemarks       { get; set; } // varchar(500)
		[Column(),                              Nullable] public decimal?  MiscExpenses          { get; set; } // decimal(18, 2)
		[Column("bugtchkAssignto"),             Nullable] public string    BugtchkAssignto       { get; set; } // varchar(10)
		[Column("bugtchkAssignedDate"),         Nullable] public DateTime? BugtchkAssignedDate   { get; set; } // datetime
		[Column("bugtchkAssignBy"),             Nullable] public string    BugtchkAssignBy       { get; set; } // varchar(10)
		[Column("isbugtchkStatus"),          NotNull    ] public bool      IsbugtchkStatus       { get; set; } // bit
		[Column("bugtRStatus"),                 Nullable] public string    BugtRStatus           { get; set; } // varchar(50)
		[Column("bugtRStatusBy"),               Nullable] public string    BugtRStatusBy         { get; set; } // varchar(10)
		[Column("bugtRStatusDate"),             Nullable] public DateTime? BugtRStatusDate       { get; set; } // datetime
		[Column(),                              Nullable] public DateTime? ApprovedDate          { get; set; } // datetime
		[Column(),                              Nullable] public DateTime? CWIPCreatedDate       { get; set; } // datetime
		[Column(),                              Nullable] public int?      IndentID              { get; set; } // int
		[Column(),                              Nullable] public string    Benefit               { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    IRRPaybackPeriod      { get; set; } // varchar(250)
		[Column(),                              Nullable] public string    ProjectedCashOutflow  { get; set; } // varchar(250)
	}

	[Table(Schema="dbo", Name="CapexMaster231123")]
	public partial class CapexMaster231123
	{
		[Column(),                           Identity   ] public int       RequestNo                 { get; set; } // int
		[Column(),                              Nullable] public string    Assettype                 { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    OldAssetCode              { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    CapexType                 { get; set; } // varchar(50)
		[Column("empcode"),                     Nullable] public string    Empcode                   { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    Grid                      { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    ReqType                   { get; set; } // varchar(50)
		[Column(),                              Nullable] public decimal?  MaxLimit                  { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public string    FixedAssetsType           { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    PName                     { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    PDescription              { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    CapitalExpenseAsset       { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    Purpose                   { get; set; } // varchar(500)
		[Column(),                              Nullable] public DateTime? EdateCompletion           { get; set; } // datetime
		[Column(),                              Nullable] public string    PurchaseLocation          { get; set; } // varchar(50)
		[Column(),                              Nullable] public decimal?  AmountPerUnit             { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public decimal?  NoofUnits                 { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public decimal?  TotalValueInINR           { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public string    SelectQuote               { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    ImportedIndigenous        { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    VendorJustification       { get; set; } // varchar(500)
		[Column(),                              Nullable] public int?      Status                    { get; set; } // int
		[Column("DEPARTMENT_Lvl_1"),            Nullable] public string    DepartmentLvl1            { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_1_Date"),       Nullable] public DateTime? DepartmentLvl1Date        { get; set; } // datetime
		[Column("DEPARTMENT_Lvl_1_Remarks"),    Nullable] public string    DepartmentLvl1Remarks     { get; set; } // varchar(500)
		[Column("DEPARTMENT_Lvl_2"),            Nullable] public string    DepartmentLvl2            { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_2_Date"),       Nullable] public DateTime? DepartmentLvl2Date        { get; set; } // datetime
		[Column("DEPARTMENT_Lvl_2_Remarks"),    Nullable] public string    DepartmentLvl2Remarks     { get; set; } // varchar(500)
		[Column("FINANCE_Lvl_3"),               Nullable] public string    FinanceLvl3               { get; set; } // varchar(10)
		[Column("FINANCE_Lvl_3_Date"),          Nullable] public DateTime? FinanceLvl3Date           { get; set; } // datetime
		[Column("FINANCE_Lvl_3_Remarks"),       Nullable] public string    FinanceLvl3Remarks        { get; set; } // varchar(500)
		[Column("FINANCEF_Lvl_4"),              Nullable] public string    FinancefLvl4              { get; set; } // varchar(10)
		[Column("FINANCEF_Lvl_4_Date"),         Nullable] public DateTime? FinancefLvl4Date          { get; set; } // datetime
		[Column("FINANCEF_Lvl_4_Remarks"),      Nullable] public string    FinancefLvl4Remarks       { get; set; } // varchar(500)
		[Column("FINANCE_Lvl_5"),               Nullable] public string    FinanceLvl5               { get; set; } // varchar(10)
		[Column("FINANCE_Lvl_5_Date"),          Nullable] public DateTime? FinanceLvl5Date           { get; set; } // datetime
		[Column("FINANCE_Lvl_5_Remarks"),       Nullable] public string    FinanceLvl5Remarks        { get; set; } // varchar(500)
		[Column("MD_Lvl_6"),                    Nullable] public string    MdLvl6                    { get; set; } // varchar(10)
		[Column("MD_Lvl_6_Date"),               Nullable] public DateTime? MdLvl6Date                { get; set; } // datetime
		[Column("MD_Lvl_6_Remarks"),            Nullable] public string    MdLvl6Remarks             { get; set; } // varchar(500)
		[Column(),                           NotNull    ] public DateTime  CreateDate                { get; set; } // datetime
		[Column(),                              Nullable] public string    CreatedBy                 { get; set; } // varchar(50)
		[Column(),                              Nullable] public DateTime? UpdatedDate               { get; set; } // datetime
		[Column(),                              Nullable] public string    UpdatedBy                 { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    RejectedBy                { get; set; } // varchar(50)
		[Column(),                              Nullable] public DateTime? RejectedDate              { get; set; } // datetime
		[Column(),                              Nullable] public string    RejectedRemarks           { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    ReturnedBy                { get; set; } // varchar(50)
		[Column(),                              Nullable] public DateTime? ReturnedDate              { get; set; } // datetime
		[Column(),                              Nullable] public string    ReturnedRemarks           { get; set; } // varchar(500)
		[Column(),                              Nullable] public decimal?  MiscExpenses              { get; set; } // decimal(18, 2)
		[Column("bugtchkAssignto"),             Nullable] public string    BugtchkAssignto           { get; set; } // varchar(10)
		[Column("bugtchkAssignedDate"),         Nullable] public DateTime? BugtchkAssignedDate       { get; set; } // datetime
		[Column("bugtchkAssignBy"),             Nullable] public string    BugtchkAssignBy           { get; set; } // varchar(10)
		[Column("isbugtchkStatus"),          NotNull    ] public bool      IsbugtchkStatus           { get; set; } // bit
		[Column("bugtRStatus"),                 Nullable] public string    BugtRStatus               { get; set; } // varchar(50)
		[Column("bugtRStatusBy"),               Nullable] public string    BugtRStatusBy             { get; set; } // varchar(10)
		[Column("bugtRStatusDate"),             Nullable] public DateTime? BugtRStatusDate           { get; set; } // datetime
		[Column(),                              Nullable] public DateTime? ApprovedDate              { get; set; } // datetime
		[Column(),                              Nullable] public DateTime? CWIPCreatedDate           { get; set; } // datetime
		[Column(),                              Nullable] public int?      IndentID                  { get; set; } // int
		[Column(),                              Nullable] public string    Benefit                   { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    IRRPaybackPeriod          { get; set; } // varchar(250)
		[Column(),                              Nullable] public string    ProjectedCashOutflow      { get; set; } // varchar(250)
		[Column(),                              Nullable] public string    IRRPaybackPeriodValue     { get; set; } // nvarchar(500)
		[Column(),                              Nullable] public string    ProjectedCashOutflowValue { get; set; } // nvarchar(500)
		[Column(),                              Nullable] public decimal?  CfcAmount                 { get; set; } // decimal(18, 2)
	}

	[Table(Schema="dbo", Name="CapexMasterItem")]
	public partial class CapexMasterItem
	{
		[Column(),                             PrimaryKey, Identity] public int       CMIID                     { get; set; } // int
		[Column(),                             Nullable            ] public int?      CapexID                   { get; set; } // int
		[Column(),                             Nullable            ] public string    LineItem                  { get; set; } // varchar(10)
		[Column(),                             Nullable            ] public string    ItemName                  { get; set; } // varchar(500)
		[Column(),                             Nullable            ] public string    CapexNature               { get; set; } // varchar(50)
		[Column(),                             Nullable            ] public string    LocationCode              { get; set; } // varchar(50)
		[Column(),                             Nullable            ] public string    CostCenter                { get; set; } // varchar(50)
		[Column(),                             Nullable            ] public string    UOM                       { get; set; } // varchar(50)
		[Column(),                             Nullable            ] public decimal?  Quantity                  { get; set; } // decimal(18, 2)
		[Column(),                             Nullable            ] public decimal?  PerUnit                   { get; set; } // decimal(18, 2)
		[Column(),                             Nullable            ] public decimal?  Amount                    { get; set; } // decimal(18, 2)
		[Column(),                             Nullable            ] public decimal?  Tax                       { get; set; } // decimal(18, 2)
		[Column(),                             Nullable            ] public decimal?  Total                     { get; set; } // decimal(18, 2)
		[Column(),                             Nullable            ] public string    CWIP                      { get; set; } // varchar(10)
		[Column("CWIP_InsertedBy"),            Nullable            ] public string    CwipInsertedBy            { get; set; } // varchar(10)
		[Column("CWIP_InsertedDate"),          Nullable            ] public DateTime? CwipInsertedDate          { get; set; } // datetime
		[Column("CWIP_Description"),           Nullable            ] public string    CwipDescription           { get; set; } // varchar(500)
		[Column(),                             Nullable            ] public string    InternalOrder             { get; set; } // varchar(10)
		[Column("InternalOrder_InsertedBy"),   Nullable            ] public string    InternalOrderInsertedBy   { get; set; } // varchar(10)
		[Column("InternalOrder_InsertedDate"), Nullable            ] public DateTime? InternalOrderInsertedDate { get; set; } // datetime
		[Column("InternalOrder_Description"),  Nullable            ] public string    InternalOrderDescription  { get; set; } // varchar(500)
		[Column(),                             Nullable            ] public DateTime? CreateDate                { get; set; } // datetime
		[Column(),                             Nullable            ] public string    CreatedBy                 { get; set; } // varchar(10)
		[Column(),                             Nullable            ] public DateTime? UpdatedDate               { get; set; } // datetime
		[Column(),                             Nullable            ] public string    UpdatedBy                 { get; set; } // varchar(10)
	}

	[Table(Schema="dbo", Name="CapexMasterItem_VendorQuotation")]
	public partial class CapexMasterItemVendorQuotation
	{
		[Column(),              Identity] public int       CVQID         { get; set; } // int
		[Column(),              Nullable] public int?      CapexID       { get; set; } // int
		[Column(),              Nullable] public string    FileCode      { get; set; } // varchar(50)
		[Column("Vendor_Code"), Nullable] public string    VendorCode    { get; set; } // varchar(50)
		[Column(),              Nullable] public string    LineItem      { get; set; } // varchar(10)
		[Column(),              Nullable] public string    ItemName      { get; set; } // varchar(500)
		[Column(),              Nullable] public string    UOM           { get; set; } // varchar(50)
		[Column(),              Nullable] public decimal?  Quantity      { get; set; } // decimal(18, 2)
		[Column(),              Nullable] public decimal?  InitialRate   { get; set; } // decimal(18, 2)
		[Column(),              Nullable] public decimal?  InitialAmount { get; set; } // decimal(18, 2)
		[Column(),              Nullable] public decimal?  FinalRate     { get; set; } // decimal(18, 2)
		[Column(),              Nullable] public decimal?  FinalAmount   { get; set; } // decimal(18, 2)
		[Column(),              Nullable] public decimal?  Tax           { get; set; } // decimal(18, 2)
		[Column(),              Nullable] public decimal?  TotalWithTax  { get; set; } // decimal(18, 2)
		[Column(),              Nullable] public string    Remarks       { get; set; } // nvarchar(500)
		[Column(),              Nullable] public bool?     IsActive      { get; set; } // bit
		[Column(),              Nullable] public DateTime? CreateDate    { get; set; } // datetime
		[Column(),              Nullable] public string    CreatedBy     { get; set; } // varchar(10)
		[Column(),              Nullable] public DateTime? UpdatedDate   { get; set; } // datetime
		[Column(),              Nullable] public string    UpdatedBy     { get; set; } // varchar(10)
	}

	[Table(Schema="dbo", Name="CapexMaster_log")]
	public partial class CapexMasterLog
	{
		[Column(),                           Identity   ] public int       LogID                 { get; set; } // int
		[Column(),                              Nullable] public int?      RequestNo             { get; set; } // int
		[Column(),                              Nullable] public string    Assettype             { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    OldAssetCode          { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    CapexType             { get; set; } // varchar(50)
		[Column("empcode"),                     Nullable] public string    Empcode               { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    Grid                  { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    ReqType               { get; set; } // varchar(50)
		[Column(),                              Nullable] public decimal?  MaxLimit              { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public string    FixedAssetsType       { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    PName                 { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    PDescription          { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    CapitalExpenseAsset   { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    Purpose               { get; set; } // varchar(500)
		[Column(),                              Nullable] public DateTime? EdateCompletion       { get; set; } // datetime
		[Column(),                              Nullable] public string    PurchaseLocation      { get; set; } // varchar(50)
		[Column(),                              Nullable] public decimal?  AmountPerUnit         { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public decimal?  NoofUnits             { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public decimal?  TotalValueInINR       { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public string    SelectQuote           { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    ImportedIndigenous    { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    VendorJustification   { get; set; } // varchar(500)
		[Column(),                              Nullable] public int?      Status                { get; set; } // int
		[Column("DEPARTMENT_Lvl_1"),            Nullable] public string    DepartmentLvl1        { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_1_Date"),       Nullable] public DateTime? DepartmentLvl1Date    { get; set; } // datetime
		[Column("DEPARTMENT_Lvl_1_Remarks"),    Nullable] public string    DepartmentLvl1Remarks { get; set; } // varchar(500)
		[Column("DEPARTMENT_Lvl_2"),            Nullable] public string    DepartmentLvl2        { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_2_Date"),       Nullable] public DateTime? DepartmentLvl2Date    { get; set; } // datetime
		[Column("DEPARTMENT_Lvl_2_Remarks"),    Nullable] public string    DepartmentLvl2Remarks { get; set; } // varchar(500)
		[Column("FINANCE_Lvl_3"),               Nullable] public string    FinanceLvl3           { get; set; } // varchar(10)
		[Column("FINANCE_Lvl_3_Date"),          Nullable] public DateTime? FinanceLvl3Date       { get; set; } // datetime
		[Column("FINANCE_Lvl_3_Remarks"),       Nullable] public string    FinanceLvl3Remarks    { get; set; } // varchar(500)
		[Column("FINANCEF_Lvl_4"),              Nullable] public string    FinancefLvl4          { get; set; } // varchar(10)
		[Column("FINANCEF_Lvl_4_Date"),         Nullable] public DateTime? FinancefLvl4Date      { get; set; } // datetime
		[Column("FINANCEF_Lvl_4_Remarks"),      Nullable] public string    FinancefLvl4Remarks   { get; set; } // varchar(500)
		[Column("FINANCE_Lvl_5"),               Nullable] public string    FinanceLvl5           { get; set; } // varchar(10)
		[Column("FINANCE_Lvl_5_Date"),          Nullable] public DateTime? FinanceLvl5Date       { get; set; } // datetime
		[Column("FINANCE_Lvl_5_Remarks"),       Nullable] public string    FinanceLvl5Remarks    { get; set; } // varchar(500)
		[Column("MD_Lvl_6"),                    Nullable] public string    MdLvl6                { get; set; } // varchar(10)
		[Column("MD_Lvl_6_Date"),               Nullable] public DateTime? MdLvl6Date            { get; set; } // datetime
		[Column("MD_Lvl_6_Remarks"),            Nullable] public string    MdLvl6Remarks         { get; set; } // varchar(500)
		[Column(),                           NotNull    ] public DateTime  CreateDate            { get; set; } // datetime
		[Column(),                              Nullable] public string    CreatedBy             { get; set; } // varchar(50)
		[Column(),                              Nullable] public DateTime? UpdatedDate           { get; set; } // datetime
		[Column(),                              Nullable] public string    UpdatedBy             { get; set; } // varchar(50)
		[Column(),                              Nullable] public string    RejectedBy            { get; set; } // varchar(50)
		[Column(),                              Nullable] public DateTime? RejectedDate          { get; set; } // datetime
		[Column(),                              Nullable] public string    RejectedRemarks       { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    ReturnedBy            { get; set; } // varchar(50)
		[Column(),                              Nullable] public DateTime? ReturnedDate          { get; set; } // datetime
		[Column(),                              Nullable] public string    ReturnedRemarks       { get; set; } // varchar(500)
		[Column(),                              Nullable] public decimal?  MiscExpenses          { get; set; } // decimal(18, 2)
		[Column(),                              Nullable] public DateTime? LoggedDate            { get; set; } // datetime
		[Column("bugtchkAssignto"),             Nullable] public string    BugtchkAssignto       { get; set; } // varchar(10)
		[Column("bugtchkAssignedDate"),         Nullable] public DateTime? BugtchkAssignedDate   { get; set; } // datetime
		[Column("bugtchkAssignBy"),             Nullable] public string    BugtchkAssignBy       { get; set; } // varchar(10)
		[Column("isbugtchkStatus"),             Nullable] public bool?     IsbugtchkStatus       { get; set; } // bit
		[Column("bugtRStatus"),                 Nullable] public string    BugtRStatus           { get; set; } // varchar(50)
		[Column("bugtRStatusBy"),               Nullable] public string    BugtRStatusBy         { get; set; } // varchar(10)
		[Column("bugtRStatusDate"),             Nullable] public DateTime? BugtRStatusDate       { get; set; } // datetime
		[Column(),                              Nullable] public DateTime? ApprovedDate          { get; set; } // datetime
		[Column(),                              Nullable] public DateTime? CWIPCreatedDate       { get; set; } // datetime
		[Column(),                              Nullable] public int?      IndentID              { get; set; } // int
		[Column(),                              Nullable] public string    Benefit               { get; set; } // varchar(500)
		[Column(),                              Nullable] public string    IRRPaybackPeriod      { get; set; } // varchar(250)
		[Column(),                              Nullable] public string    ProjectedCashOutflow  { get; set; } // varchar(250)
	}

	[Table(Schema="dbo", Name="CapexNature")]
	public partial class CapexNature
	{
		[Column(),              PrimaryKey,  NotNull] public int       CNID              { get; set; } // int
		[Column("CapexNature"),    Nullable         ] public string    CapexNatureColumn { get; set; } // varchar(50)
		[Column(),                           NotNull] public bool      IsActive          { get; set; } // bit
		[Column(),                 Nullable         ] public DateTime? CreatedDate       { get; set; } // datetime
		[Column(),                 Nullable         ] public string    CreatedBy         { get; set; } // varchar(10)
		[Column(),                 Nullable         ] public DateTime? UpdatedDate       { get; set; } // datetime
		[Column(),                 Nullable         ] public string    UpdatedBy         { get; set; } // varchar(10)
	}

	[Table(Schema="dbo", Name="CapexPayApprovalCat")]
	public partial class CapexPayApprovalCat
	{
		[Column(),                   PrimaryKey,  Identity] public int       CPACID            { get; set; } // int
		[Column(),                   NotNull              ] public int       CapexID           { get; set; } // int
		[Column(),                   NotNull              ] public decimal   AmountForm        { get; set; } // decimal(20, 2)
		[Column(),                   NotNull              ] public decimal   AmountTo          { get; set; } // decimal(20, 2)
		[Column("DEPARTMENT_Lvl_1"),    Nullable          ] public string    DepartmentLvl1    { get; set; } // varchar(20)
		[Column("DEPARTMENT_Lvl_2"),    Nullable          ] public string    DepartmentLvl2    { get; set; } // varchar(20)
		[Column("FINANCE_Lvl_3"),       Nullable          ] public string    FinanceLvl3       { get; set; } // varchar(20)
		[Column("FINANCEF_Lvl_4"),      Nullable          ] public string    FinancefLvl4      { get; set; } // varchar(20)
		[Column("FINANCE_Lvl_5"),       Nullable          ] public string    FinanceLvl5       { get; set; } // varchar(20)
		[Column("MD_Lvl_6"),            Nullable          ] public string    MdLvl6            { get; set; } // varchar(20)
		[Column(),                      Nullable          ] public string    Remarks           { get; set; } // varchar(200)
		[Column("isActive"),            Nullable          ] public bool?     IsActive          { get; set; } // bit
		[Column(),                      Nullable          ] public string    CreatedBy         { get; set; } // varchar(10)
		[Column(),                      Nullable          ] public DateTime? CreatedDate       { get; set; } // datetime
		[Column(),                      Nullable          ] public string    UpdatedBy         { get; set; } // varchar(10)
		[Column(),                      Nullable          ] public DateTime? UpdatedDate       { get; set; } // datetime
		/// <summary>
		/// 0=Default,1=Customer Funded Capex
		/// </summary>
		[Column(),                      Nullable          ] public int?      IsSpecialCategory { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__CapexPayA__Capex__17036CC0
		/// </summary>
		[Association(ThisKey="CapexID", OtherKey="CTID", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK__CapexPayA__Capex__17036CC0", BackReferenceName="CapexPayACapex17036Ccs")]
		public CapexTypeMaster Capex { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="CapexPayApprovalCat_EMP_Mapping")]
	public partial class CapexPayApprovalCatEmpMapping
	{
		[Column(),                   Identity              ] public int       ID                { get; set; } // int
		[Column(),                   PrimaryKey(1), NotNull] public int       CapexID           { get; set; } // int
		[Column(),                   PrimaryKey(2), NotNull] public string    EMPCode           { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_1"),                NotNull] public string    DepartmentLvl1    { get; set; } // varchar(20)
		[Column("DEPARTMENT_Lvl_2"),    Nullable           ] public string    DepartmentLvl2    { get; set; } // varchar(20)
		[Column("FINANCE_Lvl_3"),       Nullable           ] public string    FinanceLvl3       { get; set; } // varchar(20)
		[Column("FINANCEF_Lvl_4"),      Nullable           ] public string    FinancefLvl4      { get; set; } // varchar(20)
		[Column("FINANCE_Lvl_5"),       Nullable           ] public string    FinanceLvl5       { get; set; } // varchar(20)
		[Column("MD_Lvl_6"),            Nullable           ] public string    MdLvl6            { get; set; } // varchar(20)
		[Column("isActive"),                        NotNull] public bool      IsActive          { get; set; } // bit
		[Column(),                      Nullable           ] public string    CreatedBy         { get; set; } // varchar(10)
		[Column(),                      Nullable           ] public DateTime? CreatedDate       { get; set; } // datetime
		[Column(),                      Nullable           ] public string    UpdatedBy         { get; set; } // varchar(10)
		[Column(),                      Nullable           ] public DateTime? UpdatedDate       { get; set; } // datetime
		/// <summary>
		/// 0=Default,1=CFC Capex Customer Funded
		/// </summary>
		[Column(),                      Nullable           ] public int?      IsSpecialCategory { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__CapexEMP___Capex__47A6A41B
		/// </summary>
		[Association(ThisKey="CapexID", OtherKey="CTID", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="FK__CapexEMP___Capex__47A6A41B", BackReferenceName="CapexEMPCapex47A6A41B")]
		public CapexTypeMaster Capex { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="CapexPayApprovalCat_EMP_Mapping03102023")]
	public partial class CapexPayApprovalCatEmpMapping03102023
	{
		[Column(),                   Identity   ] public int       ID             { get; set; } // int
		[Column(),                   NotNull    ] public int       CapexID        { get; set; } // int
		[Column(),                   NotNull    ] public string    EMPCode        { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_1"), NotNull    ] public string    DepartmentLvl1 { get; set; } // varchar(20)
		[Column("DEPARTMENT_Lvl_2"),    Nullable] public string    DepartmentLvl2 { get; set; } // varchar(20)
		[Column("FINANCE_Lvl_3"),    NotNull    ] public string    FinanceLvl3    { get; set; } // varchar(20)
		[Column("FINANCEF_Lvl_4"),      Nullable] public string    FinancefLvl4   { get; set; } // varchar(20)
		[Column("FINANCE_Lvl_5"),       Nullable] public string    FinanceLvl5    { get; set; } // varchar(20)
		[Column("MD_Lvl_6"),            Nullable] public string    MdLvl6         { get; set; } // varchar(20)
		[Column("isActive"),         NotNull    ] public bool      IsActive       { get; set; } // bit
		[Column(),                      Nullable] public string    CreatedBy      { get; set; } // varchar(10)
		[Column(),                      Nullable] public DateTime? CreatedDate    { get; set; } // datetime
		[Column(),                      Nullable] public string    UpdatedBy      { get; set; } // varchar(10)
		[Column(),                      Nullable] public DateTime? UpdatedDate    { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CapexPlant")]
	public partial class CapexPlant
	{
		[Column(),           PrimaryKey,  NotNull] public string    PlantCode  { get; set; } // varchar(10)
		[Column(),              Nullable         ] public string    PlantDes   { get; set; } // varchar(150)
		[Column(),              Nullable         ] public string    Street     { get; set; } // varchar(500)
		[Column(),              Nullable         ] public string    District   { get; set; } // varchar(500)
		[Column(),              Nullable         ] public string    City       { get; set; } // varchar(500)
		[Column(),              Nullable         ] public string    PostlCode  { get; set; } // varchar(50)
		[Column(),              Nullable         ] public string    Region     { get; set; } // varchar(50)
		[Column(),              Nullable         ] public bool?     IsActive   { get; set; } // bit
		[Column(),              Nullable         ] public DateTime? CreateDate { get; set; } // datetime
		[Column(),              Nullable         ] public string    CreatedBy  { get; set; } // varchar(10)
		[Column("Com_Code"),    Nullable         ] public string    ComCode    { get; set; } // varchar(10)
	}

	[Table(Schema="dbo", Name="CapexPurchReqMapping")]
	public partial class CapexPurchReqMapping
	{
		[Column,    Nullable] public string    PurchaseCode    { get; set; } // varchar(10)
		[Column,    Nullable] public string    RequisitionCode { get; set; } // varchar(10)
		[Column, NotNull    ] public bool      IsActive        { get; set; } // bit
		[Column,    Nullable] public string    CreatedBy       { get; set; } // varchar(10)
		[Column,    Nullable] public DateTime? CreatedDate     { get; set; } // datetime
		[Column,    Nullable] public string    UpdatedBy       { get; set; } // varchar(10)
		[Column,    Nullable] public DateTime? UpdatedDate     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="Capex_ReturnRejectRemarks")]
	public partial class CapexReturnRejectRemark
	{
		[Identity             ] public int      Id          { get; set; } // int
		[Column,   NotNull    ] public int      RefId       { get; set; } // int
		[Column,   NotNull    ] public string   RemarkFrom  { get; set; } // nvarchar(50)
		[Column,   NotNull    ] public string   RemarkType  { get; set; } // nvarchar(50)
		[Column,      Nullable] public string   Remark      { get; set; } // nvarchar(500)
		[Column,   NotNull    ] public string   CreatedBy   { get; set; } // nvarchar(50)
		[Column,   NotNull    ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CapexRightsMaster")]
	public partial class CapexRightsMaster
	{
		[PrimaryKey, NotNull    ] public int       Rid         { get; set; } // int
		[Column,        Nullable] public string    RName       { get; set; } // varchar(100)
		[Column,        Nullable] public bool?     IsActive    { get; set; } // bit
		[Column,        Nullable] public string    CreatedBy   { get; set; } // varchar(20)
		[Column,        Nullable] public DateTime? CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CapexStatus")]
	public partial class CapexStatus
	{
		[Column(),              Nullable] public int?      ID                { get; set; } // int
		[Column("CapexStatus"), Nullable] public string    CapexStatusColumn { get; set; } // varchar(50)
		[Column("isActive"),    Nullable] public bool?     IsActive          { get; set; } // bit
		[Column(),              Nullable] public int?      OrderList         { get; set; } // int
		[Column(),              Nullable] public string    CreatedBy         { get; set; } // varchar(50)
		[Column(),              Nullable] public DateTime? CreatedDate       { get; set; } // datetime
		[Column(),              Nullable] public string    UpdatedBy         { get; set; } // varchar(50)
		[Column(),              Nullable] public DateTime? UpdatedDate       { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CapexTypeMaster")]
	public partial class CapexTypeMaster
	{
		[Column(),            PrimaryKey,  Identity] public int       CTID        { get; set; } // int
		[Column(),               Nullable          ] public string    CapexType   { get; set; } // varchar(250)
		[Column("isActive"),  NotNull              ] public bool      IsActive    { get; set; } // bit
		[Column(),               Nullable          ] public DateTime? CreatedDate { get; set; } // datetime
		[Column(),               Nullable          ] public string    CreatedBy   { get; set; } // varchar(50)
		[Column(),               Nullable          ] public DateTime? UpdatedDate { get; set; } // datetime
		[Column(),               Nullable          ] public string    UpdatedBy   { get; set; } // varchar(50)
		[Column("Comp_code"),    Nullable          ] public string    CompCode    { get; set; } // varchar(10)
		[Column(),               Nullable          ] public string    Des         { get; set; } // varchar(100)
		[Column(),               Nullable          ] public string    BU          { get; set; } // varchar(100)
		[Column(),               Nullable          ] public string    ReqType     { get; set; } // varchar(10)
		[Column(),               Nullable          ] public string    BudgetType  { get; set; } // varchar(15)

		#region Associations

		/// <summary>
		/// FK__CapexEMP___Capex__47A6A41B_BackReference
		/// </summary>
		[Association(ThisKey="CTID", OtherKey="CapexID", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<CapexPayApprovalCatEmpMapping> CapexEMPCapex47A6A41B { get; set; }

		/// <summary>
		/// FK__CapexPayA__Capex__17036CC0_BackReference
		/// </summary>
		[Association(ThisKey="CTID", OtherKey="CapexID", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<CapexPayApprovalCat> CapexPayACapex17036Ccs { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="CapexUser_RightsMaster")]
	public partial class CapexUserRightsMaster
	{
		[Column(),           Identity              ] public int       Mid         { get; set; } // int
		[Column(),           PrimaryKey(1), NotNull] public int       Rid         { get; set; } // int
		[Column(),           PrimaryKey(2), NotNull] public string    EmpCode     { get; set; } // varchar(20)
		[Column("isActive"),    Nullable           ] public bool?     IsActive    { get; set; } // bit
		[Column(),              Nullable           ] public string    CreatedBy   { get; set; } // varchar(20)
		[Column(),              Nullable           ] public DateTime? CreatedDate { get; set; } // datetime
		[Column(),              Nullable           ] public string    UpdatedBy   { get; set; } // varchar(20)
		[Column(),              Nullable           ] public DateTime? UpdatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="Capex_ViewOnlyEMP_RoleMapping")]
	public partial class CapexViewOnlyEMPRoleMapping
	{
		[Column("EMP_Code"),           Nullable] public string    EmpCode          { get; set; } // varchar(20)
		[Column("Capex_CreatedBy_ID"), Nullable] public string    CapexCreatedById { get; set; } // varchar(20)
		[Column("isActive"),           Nullable] public bool?     IsActive         { get; set; } // bit
		[Column(),                     Nullable] public string    MappedBy         { get; set; } // varchar(20)
		[Column("Mapped_Date"),        Nullable] public DateTime? MappedDate       { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="IndentMaster")]
	public partial class IndentMaster
	{
		[Column(),                 Identity   ] public int       IndentID                    { get; set; } // int
		[Column(),                    Nullable] public string    Company                     { get; set; } // varchar(50)
		[Column(),                    Nullable] public string    BU                          { get; set; } // varchar(50)
		[Column(),                    Nullable] public string    LocatioWork                 { get; set; } // varchar(250)
		[Column(),                    Nullable] public string    IndentType                  { get; set; } // varchar(50)
		[Column(),                    Nullable] public string    TypeofWorkDetails           { get; set; } // varchar(500)
		[Column(),                    Nullable] public string    EnclosureBQQFile            { get; set; } // varchar(150)
		[Column(),                    Nullable] public string    EnclosureDrawingFile        { get; set; } // varchar(150)
		[Column(),                    Nullable] public decimal?  RateProposed                { get; set; } // decimal(18, 2)
		[Column(),                    Nullable] public string    BudgetType                  { get; set; } // varchar(50)
		[Column(),                    Nullable] public int?      TAT                         { get; set; } // int
		[Column(),                    Nullable] public DateTime? TentativeStartDate          { get; set; } // datetime
		[Column(),                    Nullable] public DateTime? TentativeCompletionDate     { get; set; } // datetime
		[Column(),                    Nullable] public string    ProposedContractorName      { get; set; } // varchar(500)
		[Column(),                    Nullable] public string    VendorExistingLocation      { get; set; } // varchar(500)
		[Column(),                    Nullable] public string    ContractorDetailsAddressGST { get; set; } // varchar(500)
		[Column(),                    Nullable] public int?      Status                      { get; set; } // int
		[Column("RM_Lvl"),            Nullable] public string    RmLvl                       { get; set; } // varchar(10)
		[Column("RM_LvlDate"),        Nullable] public DateTime? RmLvlDate                   { get; set; } // datetime
		[Column("RM_Lvl_Remarks"),    Nullable] public string    RmLvlRemarks                { get; set; } // varchar(500)
		[Column("BU_Lvl"),            Nullable] public string    BuLvl                       { get; set; } // varchar(10)
		[Column("BU_LvlDate"),        Nullable] public DateTime? BuLvlDate                   { get; set; } // datetime
		[Column("BU_Lvl_Remarks"),    Nullable] public string    BuLvlRemarks                { get; set; } // varchar(500)
		[Column(),                 NotNull    ] public DateTime  CreateDate                  { get; set; } // datetime
		[Column(),                    Nullable] public string    CreatedBy                   { get; set; } // varchar(50)
		[Column(),                    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime
		[Column(),                    Nullable] public string    UpdatedBy                   { get; set; } // varchar(50)
		[Column(),                    Nullable] public string    RejectedBy                  { get; set; } // varchar(50)
		[Column(),                    Nullable] public DateTime? RejectedDate                { get; set; } // datetime
		[Column(),                    Nullable] public string    RejectedRemarks             { get; set; } // varchar(500)
		[Column(),                    Nullable] public string    ReturnedBy                  { get; set; } // varchar(50)
		[Column(),                    Nullable] public DateTime? ReturnedDate                { get; set; } // datetime
		[Column(),                    Nullable] public string    ReturnedRemarks             { get; set; } // varchar(500)
		[Column(),                    Nullable] public DateTime? ApprovedDate                { get; set; } // datetime
		[Column(),                    Nullable] public string    CapexType                   { get; set; } // varchar(50)
		[Column(),                    Nullable] public string    Remarks                     { get; set; } // nvarchar(1000)
		[Column(),                    Nullable] public string    TagPurchaser                { get; set; } // nvarchar(200)
	}

	[Table(Schema="dbo", Name="IndentMaster09102023")]
	public partial class IndentMaster09102023
	{
		[Column(),                 Identity   ] public int       IndentID                    { get; set; } // int
		[Column(),                    Nullable] public string    Company                     { get; set; } // varchar(50)
		[Column(),                    Nullable] public string    BU                          { get; set; } // varchar(50)
		[Column(),                    Nullable] public string    LocatioWork                 { get; set; } // varchar(250)
		[Column(),                    Nullable] public string    IndentType                  { get; set; } // varchar(50)
		[Column(),                    Nullable] public string    TypeofWorkDetails           { get; set; } // varchar(500)
		[Column(),                    Nullable] public string    EnclosureBQQFile            { get; set; } // varchar(150)
		[Column(),                    Nullable] public string    EnclosureDrawingFile        { get; set; } // varchar(150)
		[Column(),                    Nullable] public string    RateProposed                { get; set; } // varchar(500)
		[Column(),                    Nullable] public string    BudgetType                  { get; set; } // varchar(50)
		[Column(),                    Nullable] public DateTime? TentativeStartDate          { get; set; } // datetime
		[Column(),                    Nullable] public DateTime? TentativeCompletionDate     { get; set; } // datetime
		[Column(),                    Nullable] public string    ProposedContractorName      { get; set; } // varchar(500)
		[Column(),                    Nullable] public string    VendorExistingLocation      { get; set; } // varchar(500)
		[Column(),                    Nullable] public string    ContractorDetailsAddressGST { get; set; } // varchar(500)
		[Column(),                    Nullable] public int?      Status                      { get; set; } // int
		[Column("RM_Lvl"),            Nullable] public string    RmLvl                       { get; set; } // varchar(10)
		[Column("RM_LvlDate"),        Nullable] public DateTime? RmLvlDate                   { get; set; } // datetime
		[Column("RM_Lvl_Remarks"),    Nullable] public string    RmLvlRemarks                { get; set; } // varchar(500)
		[Column("BU_Lvl"),            Nullable] public string    BuLvl                       { get; set; } // varchar(10)
		[Column("BU_LvlDate"),        Nullable] public DateTime? BuLvlDate                   { get; set; } // datetime
		[Column("BU_Lvl_Remarks"),    Nullable] public string    BuLvlRemarks                { get; set; } // varchar(500)
		[Column(),                 NotNull    ] public DateTime  CreateDate                  { get; set; } // datetime
		[Column(),                    Nullable] public string    CreatedBy                   { get; set; } // varchar(50)
		[Column(),                    Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime
		[Column(),                    Nullable] public string    UpdatedBy                   { get; set; } // varchar(50)
		[Column(),                    Nullable] public string    RejectedBy                  { get; set; } // varchar(50)
		[Column(),                    Nullable] public DateTime? RejectedDate                { get; set; } // datetime
		[Column(),                    Nullable] public string    RejectedRemarks             { get; set; } // varchar(500)
		[Column(),                    Nullable] public string    ReturnedBy                  { get; set; } // varchar(50)
		[Column(),                    Nullable] public DateTime? ReturnedDate                { get; set; } // datetime
		[Column(),                    Nullable] public string    ReturnedRemarks             { get; set; } // varchar(500)
		[Column(),                    Nullable] public DateTime? ApprovedDate                { get; set; } // datetime
		[Column(),                    Nullable] public string    CapexType                   { get; set; } // varchar(50)
		[Column(),                    Nullable] public string    Remarks                     { get; set; } // nvarchar(1000)
	}

	[Table(Schema="dbo", Name="IndentMaster_log")]
	public partial class IndentMasterLog
	{
		[Column(),                 Identity] public int       LogID                       { get; set; } // int
		[Column(),                 Nullable] public int?      IndentID                    { get; set; } // int
		[Column(),                 Nullable] public string    Company                     { get; set; } // varchar(50)
		[Column(),                 Nullable] public string    BU                          { get; set; } // varchar(50)
		[Column(),                 Nullable] public string    LocatioWork                 { get; set; } // varchar(250)
		[Column(),                 Nullable] public string    TypeofWorkDetails           { get; set; } // varchar(500)
		[Column(),                 Nullable] public string    EnclosureBQQFile            { get; set; } // varchar(150)
		[Column(),                 Nullable] public string    EnclosureDrawingFile        { get; set; } // varchar(150)
		[Column(),                 Nullable] public string    RateProposed                { get; set; } // varchar(500)
		[Column(),                 Nullable] public DateTime? TentativeStartDate          { get; set; } // datetime
		[Column(),                 Nullable] public DateTime? TentativeCompletionDate     { get; set; } // datetime
		[Column(),                 Nullable] public string    ProposedContractorName      { get; set; } // varchar(500)
		[Column(),                 Nullable] public string    VendorExistingLocation      { get; set; } // varchar(500)
		[Column(),                 Nullable] public string    ContractorDetailsAddressGST { get; set; } // varchar(500)
		[Column(),                 Nullable] public int?      Status                      { get; set; } // int
		[Column("RM_Lvl"),         Nullable] public string    RmLvl                       { get; set; } // varchar(10)
		[Column("RM_LvlDate"),     Nullable] public DateTime? RmLvlDate                   { get; set; } // datetime
		[Column("RM_Lvl_Remarks"), Nullable] public string    RmLvlRemarks                { get; set; } // varchar(500)
		[Column("BU_Lvl"),         Nullable] public string    BuLvl                       { get; set; } // varchar(10)
		[Column("BU_LvlDate"),     Nullable] public DateTime? BuLvlDate                   { get; set; } // datetime
		[Column("BU_Lvl_Remarks"), Nullable] public string    BuLvlRemarks                { get; set; } // varchar(500)
		[Column(),                 Nullable] public DateTime? CreateDate                  { get; set; } // datetime
		[Column(),                 Nullable] public string    CreatedBy                   { get; set; } // varchar(50)
		[Column(),                 Nullable] public DateTime? UpdatedDate                 { get; set; } // datetime
		[Column(),                 Nullable] public string    UpdatedBy                   { get; set; } // varchar(50)
		[Column(),                 Nullable] public string    RejectedBy                  { get; set; } // varchar(50)
		[Column(),                 Nullable] public DateTime? RejectedDate                { get; set; } // datetime
		[Column(),                 Nullable] public string    RejectedRemarks             { get; set; } // varchar(500)
		[Column(),                 Nullable] public string    ReturnedBy                  { get; set; } // varchar(50)
		[Column(),                 Nullable] public DateTime? ReturnedDate                { get; set; } // datetime
		[Column(),                 Nullable] public string    ReturnedRemarks             { get; set; } // varchar(500)
		[Column(),                 Nullable] public DateTime? ApprovedDate                { get; set; } // datetime
		[Column(),                 Nullable] public DateTime? LoggedDate                  { get; set; } // datetime
		[Column(),                 Nullable] public string    CapexType                   { get; set; } // varchar(50)
		[Column(),                 Nullable] public string    Remarks                     { get; set; } // nvarchar(1000)
		[Column(),                 Nullable] public string    TagPurchaser                { get; set; } // nvarchar(200)
	}

	[Table(Schema="dbo", Name="IndentPayApprovalCat_EMP_Mapping")]
	public partial class IndentPayApprovalCatEmpMapping
	{
		[Column(),           Identity   ] public int       ID          { get; set; } // int
		[Column(),           NotNull    ] public int       IndID       { get; set; } // int
		[Column(),           NotNull    ] public string    EMPCode     { get; set; } // varchar(20)
		[Column("RM_Lvl"),      Nullable] public string    RmLvl       { get; set; } // varchar(20)
		[Column("BU_Lvl"),      Nullable] public string    BuLvl       { get; set; } // varchar(20)
		[Column("isActive"),    Nullable] public bool?     IsActive    { get; set; } // bit
		[Column(),              Nullable] public string    CreatedBy   { get; set; } // varchar(10)
		[Column(),              Nullable] public DateTime? CreatedDate { get; set; } // datetime
		[Column(),              Nullable] public string    UpdatedBy   { get; set; } // varchar(10)
		[Column(),              Nullable] public DateTime? UpdatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="IndID")]
	public partial class IndID
	{
		[Column(),           Identity   ] public int       ID          { get; set; } // int
		[Column("IndID"),    NotNull    ] public int       IndIDColumn { get; set; } // int
		[Column(),           NotNull    ] public string    EMPCode     { get; set; } // varchar(20)
		[Column("RM_Lvl"),      Nullable] public string    RmLvl       { get; set; } // varchar(20)
		[Column("BU_Lvl"),      Nullable] public string    BuLvl       { get; set; } // varchar(20)
		[Column("isActive"),    Nullable] public bool?     IsActive    { get; set; } // bit
		[Column(),              Nullable] public string    CreatedBy   { get; set; } // varchar(10)
		[Column(),              Nullable] public DateTime? CreatedDate { get; set; } // datetime
		[Column(),              Nullable] public string    UpdatedBy   { get; set; } // varchar(10)
		[Column(),              Nullable] public DateTime? UpdatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="temp")]
	public partial class Temp
	{
		[Column("ORG_ID"),          Nullable] public string OrgId         { get; set; } // varchar(255)
		[Column("ORG_NAME"),        Nullable] public string OrgName       { get; set; } // varchar(255)
		[Column(),                  Nullable] public string STATUS        { get; set; } // varchar(255)
		[Column("CREATION_DATE"),   Nullable] public string CreationDate  { get; set; } // varchar(255)
		[Column("TRX_NUMBER"),      Nullable] public string TrxNumber     { get; set; } // varchar(100)
		[Column("TRX_DATE"),        Nullable] public string TrxDate       { get; set; } // varchar(255)
		[Column("CUSTOMER_TRX_ID"), Nullable] public string CustomerTrxId { get; set; } // varchar(255)
		[Column("ITEM_CODE"),       Nullable] public string ItemCode      { get; set; } // varchar(255)
		[Column(),                  Nullable] public string DESCRIPTION   { get; set; } // varchar(255)
		[Column("LINE_NUMBER"),     Nullable] public string LineNumber    { get; set; } // varchar(10)
		[Column("CHASIS_NUMBER"),   Nullable] public string ChasisNumber  { get; set; } // varchar(255)
		[Column("ENGINE_NUMBER"),   Nullable] public string EngineNumber  { get; set; } // varchar(255)
		[Column("UOM_CODE"),        Nullable] public string UomCode       { get; set; } // varchar(255)
		[Column(),                  Nullable] public string QUANTITY      { get; set; } // varchar(255)
		[Column("UNIT_PRICE"),      Nullable] public string UnitPrice     { get; set; } // varchar(20)
	}

	[Table(Schema="dbo", Name="tempcap03")]
	public partial class Tempcap03
	{
		[Column("DEPARTMENT_Lvl_1"), Nullable] public string DepartmentLvl1 { get; set; } // varchar(10)
		[Column("FINANCE_Lvl_3"),    Nullable] public string FinanceLvl3    { get; set; } // varchar(10)
	}

	[Table(Schema="dbo", Name="temp_dtLineItem001")]
	public partial class TempDtLineItem001
	{
		[Column,    Nullable] public string ID         { get; set; } // varchar(10)
		[Column, NotNull    ] public string ItemName   { get; set; } // varchar(500)
		[Column, NotNull    ] public string PlantCode  { get; set; } // varchar(10)
		[Column,    Nullable] public string Categories { get; set; } // varchar(500)
		[Column, NotNull    ] public string UOM        { get; set; } // varchar(20)
		[Column, NotNull    ] public string Quantity   { get; set; } // varchar(20)
		[Column, NotNull    ] public string TaxRate    { get; set; } // varchar(20)
	}

	[Table(Schema="dbo", Name="Test_CapexPayApprovalCat_EMP_Mapping")]
	public partial class TestCapexPayApprovalCatEmpMapping
	{
		[Column(),                   Identity   ] public int       ID             { get; set; } // int
		[Column(),                   NotNull    ] public int       CapexID        { get; set; } // int
		[Column(),                   NotNull    ] public string    EMPCode        { get; set; } // varchar(10)
		[Column("DEPARTMENT_Lvl_1"), NotNull    ] public string    DepartmentLvl1 { get; set; } // varchar(20)
		[Column("DEPARTMENT_Lvl_2"), NotNull    ] public string    DepartmentLvl2 { get; set; } // varchar(20)
		[Column("FINANCE_Lvl_3"),    NotNull    ] public string    FinanceLvl3    { get; set; } // varchar(20)
		[Column("FINANCEF_Lvl_4"),      Nullable] public string    FinancefLvl4   { get; set; } // varchar(20)
		[Column("FINANCE_Lvl_5"),    NotNull    ] public string    FinanceLvl5    { get; set; } // varchar(20)
		[Column("MD_Lvl_6"),         NotNull    ] public string    MdLvl6         { get; set; } // varchar(20)
		[Column("isActive"),         NotNull    ] public bool      IsActive       { get; set; } // bit
		[Column(),                      Nullable] public string    CreatedBy      { get; set; } // varchar(10)
		[Column(),                      Nullable] public DateTime? CreatedDate    { get; set; } // datetime
		[Column(),                      Nullable] public string    UpdatedBy      { get; set; } // varchar(10)
		[Column(),                      Nullable] public DateTime? UpdatedDate    { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="UserMaster_Temp")]
	public partial class UserMasterTemp
	{
		[Column("empCode"),  Nullable] public string EmpCode  { get; set; } // varchar(20)
		[Column("password"), Nullable] public string Password { get; set; } // varchar(50)
		[Column("isActive"), Nullable] public string IsActive { get; set; } // varchar(10)
	}

	[Table(Schema="dbo", Name="Vendor_Master")]
	public partial class VendorMaster
	{
		[Column(),                                Identity            ] public int       Id                         { get; set; } // int
		[Column("Vendor_Code"),                   PrimaryKey,  NotNull] public string    VendorCode                 { get; set; } // varchar(20)
		[Column(),                                   Nullable         ] public string    CompanyCode                { get; set; } // nvarchar(10)
		[Column("Firm_Name"),                        Nullable         ] public string    FirmName                   { get; set; } // varchar(250)
		[Column("Firm_Contact_Number"),              Nullable         ] public string    FirmContactNumber          { get; set; } // varchar(50)
		[Column("Firm_Email_Address"),               Nullable         ] public string    FirmEmailAddress           { get; set; } // varchar(250)
		[Column(),                                   Nullable         ] public string    Address                    { get; set; } // varchar(500)
		[Column(),                                   Nullable         ] public string    City                       { get; set; } // varchar(250)
		[Column(),                                   Nullable         ] public string    District                   { get; set; } // varchar(150)
		[Column(),                                   Nullable         ] public string    State                      { get; set; } // varchar(150)
		[Column("Pin_Code"),                         Nullable         ] public string    PinCode                    { get; set; } // varchar(10)
		[Column("Contact_Person_Name"),              Nullable         ] public string    ContactPersonName          { get; set; } // varchar(250)
		[Column("Contact_Person_Contact_Number"),    Nullable         ] public string    ContactPersonContactNumber { get; set; } // varchar(50)
		[Column("Contact_Person_Email_Address"),     Nullable         ] public string    ContactPersonEmailAddress  { get; set; } // varchar(250)
		[Column(),                                   Nullable         ] public string    Gst                        { get; set; } // varchar(200)
		[Column(),                                   Nullable         ] public string    Remarks                    { get; set; } // varchar(2000)
		[Column(),                                   Nullable         ] public bool?     Status                     { get; set; } // bit
		[Column("Create_Date"),                      Nullable         ] public DateTime? CreateDate                 { get; set; } // datetime
		[Column("Created_By"),                       Nullable         ] public string    CreatedBy                  { get; set; } // varchar(20)
		[Column("Updated_By"),                       Nullable         ] public string    UpdatedBy                  { get; set; } // varchar(20)
		[Column("Updated_Date"),                     Nullable         ] public DateTime? UpdatedDate                { get; set; } // datetime
	}

	public static partial class CapExTSDBStoredProcedures
	{
		#region CapexAssigntocheckbugt

		public static IEnumerable<CapexAssigntocheckbugtResult> CapexAssigntocheckbugt(this CapExTSDB dataConnection, string @ReqNo, string @FinanceRepCode, string @userSession)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexAssigntocheckbugtResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[capex_assigntocheckbugt]",
				new DataParameter("@ReqNo",          @ReqNo,          LinqToDB.DataType.VarChar),
				new DataParameter("@FinanceRepCode", @FinanceRepCode, LinqToDB.DataType.VarChar),
				new DataParameter("@userSession",    @userSession,    LinqToDB.DataType.VarChar));
		}

		public partial class CapexAssigntocheckbugtResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexAttachedTransFileId

		public static IEnumerable<CapexAttachedTransFileIdResult> CapexAttachedTransFileId(this CapExTSDB dataConnection)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexAttachedTransFileIdResult
				{
					Column1 = Converter.ChangeTypeTo<long>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_AttachedTransFileId]");
		}

		public partial class CapexAttachedTransFileIdResult
		{
			[Column("")] public long Column1 { get; set; }
		}

		#endregion

		#region CapexChechisValidApproverByApp

		public static IEnumerable<CapexChechisValidApproverByAppResult> CapexChechisValidApproverByApp(this CapExTSDB dataConnection, string @RequestNo, string @empcode)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexChechisValidApproverByAppResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_ChechisValidApproverByApp]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@empcode",   @empcode,   LinqToDB.DataType.VarChar));
		}

		public partial class CapexChechisValidApproverByAppResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexChechisValidforViewOnlyCapexByApp

		public static IEnumerable<CapexChechisValidforViewOnlyCapexByAppResult> CapexChechisValidforViewOnlyCapexByApp(this CapExTSDB dataConnection, string @RequestNo, string @empcode)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexChechisValidforViewOnlyCapexByAppResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_ChechisValidforViewOnlyCapexByApp]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@empcode",   @empcode,   LinqToDB.DataType.VarChar));
		}

		public partial class CapexChechisValidforViewOnlyCapexByAppResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexChkRequesterRight

		public static IEnumerable<CapexChkRequesterRightResult> CapexChkRequesterRight(this CapExTSDB dataConnection, string @uid)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexChkRequesterRightResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_chk_Requester_right]",
				new DataParameter("@uid", @uid, LinqToDB.DataType.VarChar));
		}

		public partial class CapexChkRequesterRightResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexCustselisprint

		public static IEnumerable<CapexCustselisprintResult> CapexCustselisprint(this CapExTSDB dataConnection)
		{
			return dataConnection.QueryProc<CapexCustselisprintResult>("[dbo].[Capex_custselisprint]");
		}

		public partial class CapexCustselisprintResult
		{
			public int RequestNo { get; set; }
		}

		#endregion

		#region CapexDelattchfile

		public static int CapexDelattchfile(this CapExTSDB dataConnection, string @fileid)
		{
			return dataConnection.ExecuteProc("[dbo].[capex_delattchfile]",
				new DataParameter("@fileid", @fileid, LinqToDB.DataType.VarChar));
		}

		#endregion

		#region CapexDelDrawing

		public static int CapexDelDrawing(this CapExTSDB dataConnection, string @fileid, string @userid)
		{
			return dataConnection.ExecuteProc("[dbo].[Capex_delDrawing]",
				new DataParameter("@fileid", @fileid, LinqToDB.DataType.VarChar),
				new DataParameter("@userid", @userid, LinqToDB.DataType.VarChar));
		}

		#endregion

		#region CapexFAddAttachment

		public static int CapexFAddAttachment(this CapExTSDB dataConnection, string @filepth, string @FileCode, string @userid, string @FileType, decimal? @Amount, string @tnc, string @PaymentTerms, string @Delivery, string @Freight, string @InstalationCost, string @Remarks, DataTable @CapexQuotationItemLine)
		{
			return dataConnection.ExecuteProc("[dbo].[Capex_f_add_attachment]",
				new DataParameter("@filepth",                @filepth,                LinqToDB.DataType.VarChar),
				new DataParameter("@FileCode",               @FileCode,               LinqToDB.DataType.VarChar),
				new DataParameter("@userid",                 @userid,                 LinqToDB.DataType.VarChar),
				new DataParameter("@FileType",               @FileType,               LinqToDB.DataType.VarChar),
				new DataParameter("@Amount",                 @Amount,                 LinqToDB.DataType.Decimal),
				new DataParameter("@tnc",                    @tnc,                    LinqToDB.DataType.NVarChar),
				new DataParameter("@PaymentTerms",           @PaymentTerms,           LinqToDB.DataType.VarChar),
				new DataParameter("@Delivery",               @Delivery,               LinqToDB.DataType.VarChar),
				new DataParameter("@Freight",                @Freight,                LinqToDB.DataType.VarChar),
				new DataParameter("@InstalationCost",        @InstalationCost,        LinqToDB.DataType.VarChar),
				new DataParameter("@Remarks",                @Remarks,                LinqToDB.DataType.VarChar),
				new DataParameter("@CapexQuotationItemLine", @CapexQuotationItemLine, LinqToDB.DataType.Structured){ DbType = "[dbo].[tblCapexQuotationItemLine]" });
		}

		#endregion

		#region CapexFAddDrawingattachment

		public static IEnumerable<CapexFAddDrawingattachmentResult> CapexFAddDrawingattachment(this CapExTSDB dataConnection, string @filepth, string @Remarks, string @FileCode, string @AssignedTo, string @CreatedBY, string @DrawingCapexName)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexFAddDrawingattachmentResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_f_add_drawingattachment]",
				new DataParameter("@filepth",          @filepth,          LinqToDB.DataType.VarChar),
				new DataParameter("@Remarks",          @Remarks,          LinqToDB.DataType.VarChar),
				new DataParameter("@FileCode",         @FileCode,         LinqToDB.DataType.VarChar),
				new DataParameter("@AssignedTo",       @AssignedTo,       LinqToDB.DataType.VarChar),
				new DataParameter("@CreatedBY",        @CreatedBY,        LinqToDB.DataType.VarChar),
				new DataParameter("@DrawingCapexName", @DrawingCapexName, LinqToDB.DataType.VarChar));
		}

		public partial class CapexFAddDrawingattachmentResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexFSelAttachmentPostGrid

		public static IEnumerable<CapexFSelAttachmentPostGridResult> CapexFSelAttachmentPostGrid(this CapExTSDB dataConnection, string @FileCode)
		{
			return dataConnection.QueryProc<CapexFSelAttachmentPostGridResult>("[dbo].[Capex_f_sel_attachment_post_grid]",
				new DataParameter("@FileCode", @FileCode, LinqToDB.DataType.VarChar));
		}

		public partial class CapexFSelAttachmentPostGridResult
		{
			public decimal  FileId          { get; set; }
			public string   filepth         { get; set; }
			public string   VendorCode      { get; set; }
			public string   FileName        { get; set; }
			public string   VendorName      { get; set; }
			public decimal? QuotationAmount { get; set; }
		}

		#endregion

		#region CapexIsVisibleChatRequestPage

		public static IEnumerable<CapexIsVisibleChatRequestPageResult> CapexIsVisibleChatRequestPage(this CapExTSDB dataConnection, string @RequestNo)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexIsVisibleChatRequestPageResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_isVisibleChatRequestPage]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar));
		}

		public partial class CapexIsVisibleChatRequestPageResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexSelCapexforList

		public static IEnumerable<CapexSelCapexforListResult> CapexSelCapexforList(this CapExTSDB dataConnection)
		{
			return dataConnection.QueryProc<CapexSelCapexforListResult>("[dbo].[Capex_Sel_CapexforList]");
		}

		public partial class CapexSelCapexforListResult
		{
			public int      RequestNo           { get; set; }
			public string   Assettype           { get; set; }
			public string   OldAssetCode        { get; set; }
			public string   CapexType           { get; set; }
			public string   PName               { get; set; }
			public string   PDescription        { get; set; }
			public string   Purpose             { get; set; }
			public decimal? TotalValueInINR     { get; set; }
			public string   ImportedIndigenous  { get; set; }
			public string   VendorJustification { get; set; }
			public int?     Status              { get; set; }
		}

		#endregion

		#region CapexSelIsApprover

		public static IEnumerable<CapexSelIsApproverResult> CapexSelIsApprover(this CapExTSDB dataConnection, string @empcode)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexSelIsApproverResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_sel_IsApprover]",
				new DataParameter("@empcode", @empcode, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelIsApproverResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexSelAppliedLocation

		public static IEnumerable<AA1> CapexSelAppliedLocation(this CapExTSDB dataConnection)
		{
			return dataConnection.QueryProc<AA1>("[dbo].[Capex_selAppliedLocation]");
		}

		#endregion

		#region CapexSelApprovalCapexQuoteDetails

		public static IEnumerable<CapexSelApprovalCapexQuoteDetailsResult> CapexSelApprovalCapexQuoteDetails(this CapExTSDB dataConnection, string @RequestNo)
		{
			return dataConnection.QueryProc<CapexSelApprovalCapexQuoteDetailsResult>("[dbo].[Capex_SelApprovalCapexQuoteDetails]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelApprovalCapexQuoteDetailsResult
		{
			public decimal  FileId          { get; set; }
			public string   filepth         { get; set; }
			public string   VendorCode      { get; set; }
			public string   FileName        { get; set; }
			public string   VendorName      { get; set; }
			public decimal? QuotationAmount { get; set; }
		}

		#endregion

		#region CapexSelCapexNature

		public static IEnumerable<CapexSelCapexNatureResult> CapexSelCapexNature(this CapExTSDB dataConnection)
		{
			return dataConnection.QueryProc<CapexSelCapexNatureResult>("[dbo].[Capex_SelCapexNature]");
		}

		public partial class CapexSelCapexNatureResult
		{
			public string CapexNature { get; set; }
		}

		#endregion

		#region CapexSelCurrentWithFieldName

		public static IEnumerable<CapexSelCurrentWithFieldNameResult> CapexSelCurrentWithFieldName(this CapExTSDB dataConnection, string @reqNo)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexSelCurrentWithFieldNameResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_SelCurrentWithFieldName]",
				new DataParameter("@reqNo", @reqNo, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelCurrentWithFieldNameResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexSelisLive

		public static IEnumerable<CapexSelisLiveResult> CapexSelisLive(this CapExTSDB dataConnection)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexSelisLiveResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_selisLive]");
		}

		public partial class CapexSelisLiveResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexSelIsVisibleRnDTab

		public static IEnumerable<CapexSelIsVisibleRnDTabResult> CapexSelIsVisibleRnDTab(this CapExTSDB dataConnection, string @userid)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexSelIsVisibleRnDTabResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_selIsVisibleRnDTab]",
				new DataParameter("@userid", @userid, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelIsVisibleRnDTabResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexSelReturnCapexDetails

		public static IEnumerable<CapexSelReturnCapexDetailsResult> CapexSelReturnCapexDetails(this CapExTSDB dataConnection, string @RequestNo, string @EmpCode)
		{
			return dataConnection.QueryProc<CapexSelReturnCapexDetailsResult>("[dbo].[Capex_SelReturnCapexDetails]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@EmpCode",   @EmpCode,   LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelReturnCapexDetailsResult
		{
			public int       RequestNo                    { get; set; }
			public string    Assettype                    { get; set; }
			public string    OldAssetCode                 { get; set; }
			public string    CapexType                    { get; set; }
			public string    empcode                      { get; set; }
			public string    Grid                         { get; set; }
			public string    ReqType                      { get; set; }
			public decimal?  MaxLimit                     { get; set; }
			public string    FixedAssetsType              { get; set; }
			public string    PName                        { get; set; }
			public string    PDescription                 { get; set; }
			public string    CapitalExpenseAsset          { get; set; }
			public string    Purpose                      { get; set; }
			public string    EdateCompletion              { get; set; }
			public string    PurchaseLocation             { get; set; }
			public decimal?  AmountPerUnit                { get; set; }
			public decimal?  NoofUnits                    { get; set; }
			public decimal?  TotalValueInINR              { get; set; }
			public decimal?  MiscExpenses                 { get; set; }
			public string    SelectQuote                  { get; set; }
			public string    ImportedIndigenous           { get; set; }
			public string    VendorJustification          { get; set; }
			public int?      Status                       { get; set; }
			public string    DEPARTMENT_Lvl_1             { get; set; }
			public DateTime? DEPARTMENT_Lvl_1_Date        { get; set; }
			public string    DEPARTMENT_Lvl_1_Remarks     { get; set; }
			public string    DEPARTMENT_Lvl_2             { get; set; }
			public DateTime? DEPARTMENT_Lvl_2_Date        { get; set; }
			public string    DEPARTMENT_Lvl_2_Remarks     { get; set; }
			public string    FINANCE_Lvl_3                { get; set; }
			public DateTime? FINANCE_Lvl_3_Date           { get; set; }
			public string    FINANCE_Lvl_3_Remarks        { get; set; }
			public string    FINANCEF_Lvl_4               { get; set; }
			public DateTime? FINANCEF_Lvl_4_Date          { get; set; }
			public string    FINANCEF_Lvl_4_Remarks       { get; set; }
			public string    FINANCE_Lvl_5                { get; set; }
			public DateTime? FINANCE_Lvl_5_Date           { get; set; }
			public string    FINANCE_Lvl_5_Remarks        { get; set; }
			public string    MD_Lvl_6                     { get; set; }
			public DateTime? MD_Lvl_6_Date                { get; set; }
			public string    MD_Lvl_6_Remarks             { get; set; }
			public DateTime  CreateDate                   { get; set; }
			public string    CreatedBy                    { get; set; }
			public DateTime? UpdatedDate                  { get; set; }
			public string    UpdatedBy                    { get; set; }
			public string    RejectedBy                   { get; set; }
			public DateTime? RejectedDate                 { get; set; }
			public string    RejectedRemarks              { get; set; }
			public string    ReturnedBy                   { get; set; }
			public DateTime? ReturnedDate                 { get; set; }
			public string    ReturnedRemarks              { get; set; }
			public int?      IndentID                     { get; set; }
			public string    Benefit                      { get; set; }
			public string    IRRPaybackPeriodFileName     { get; set; }
			public string    IRRPaybackPeriod             { get; set; }
			public int       isIRRPaybackPeriod           { get; set; }
			public string    ProjectedCashOutflowFileName { get; set; }
			public string    ProjectedCashOutflow         { get; set; }
			public int       isProjectedCashOutflow       { get; set; }
			public string    ComCode                      { get; set; }
			public string    BU                           { get; set; }
			public string    RT                           { get; set; }
			public string    BT                           { get; set; }
			public string    CTDes                        { get; set; }
			public string    IRRPaybackPeriodValue        { get; set; }
			public string    ProjectedCashOutflowValue    { get; set; }
			public decimal   CfcAmount                    { get; set; }
		}

		#endregion

		#region CapexSelReturnCapexFiles

		public static IEnumerable<CapexSelReturnCapexFilesResult> CapexSelReturnCapexFiles(this CapExTSDB dataConnection, string @RequestNo)
		{
			return dataConnection.QueryProc<CapexSelReturnCapexFilesResult>("[dbo].[Capex_SelReturnCapexFiles]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelReturnCapexFilesResult
		{
			public string FileCode { get; set; }
		}

		#endregion

		#region CapexSelReturnCapexItems

		public static IEnumerable<CapexSelReturnCapexItemsResult> CapexSelReturnCapexItems(this CapExTSDB dataConnection, string @RequestNo)
		{
			return dataConnection.QueryProc<CapexSelReturnCapexItemsResult>("[dbo].[Capex_SelReturnCapexItems]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelReturnCapexItemsResult
		{
			public string   ItemName   { get; set; }
			public string   PlantCode  { get; set; }
			public string   Categories { get; set; }
			public string   UOM        { get; set; }
			public decimal? Quantity   { get; set; }
			public decimal? TaxRate    { get; set; }
		}

		#endregion

		#region CapexSelRnDList

		public static IEnumerable<CapexSelRnDListResult> CapexSelRnDList(this CapExTSDB dataConnection, string @RequestNo)
		{
			return dataConnection.QueryProc<CapexSelRnDListResult>("[dbo].[Capex_SelRnDList]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelRnDListResult
		{
			public string pth     { get; set; }
			public string filepth { get; set; }
			public string Remarks { get; set; }
		}

		#endregion

		#region CapexSelValidateReturnReq

		public static IEnumerable<CapexSelValidateReturnReqResult> CapexSelValidateReturnReq(this CapExTSDB dataConnection, string @RequestNo, string @EmpCode)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexSelValidateReturnReqResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_SelValidateReturnReq]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@EmpCode",   @EmpCode,   LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelValidateReturnReqResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexSelVendorAddressDetails

		public static IEnumerable<CapexSelVendorAddressDetailsResult> CapexSelVendorAddressDetails(this CapExTSDB dataConnection, string @VendorCode)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexSelVendorAddressDetailsResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capex_SelVendorAddressDetails]",
				new DataParameter("@VendorCode", @VendorCode, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelVendorAddressDetailsResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexSubmitcheckbugtstatus

		public static IEnumerable<CapexSubmitcheckbugtstatusResult> CapexSubmitcheckbugtstatus(this CapExTSDB dataConnection, string @ReqNo, string @resultstatus, string @userSession)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexSubmitcheckbugtstatusResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[capex_submitcheckbugtstatus]",
				new DataParameter("@ReqNo",        @ReqNo,        LinqToDB.DataType.VarChar),
				new DataParameter("@resultstatus", @resultstatus, LinqToDB.DataType.VarChar),
				new DataParameter("@userSession",  @userSession,  LinqToDB.DataType.VarChar));
		}

		public partial class CapexSubmitcheckbugtstatusResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexCapitalCRFOrderEntryInsert

		public static IEnumerable<CapexCapitalCRFOrderEntryInsertResult> CapexCapitalCRFOrderEntryInsert(this CapExTSDB dataConnection, string @CapexID, string @LineItem, string @CWIP, string @CWIP_Description, string @InternalOrder, string @InternalOrder_Description, string @CreatedBy)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexCapitalCRFOrderEntryInsertResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexCapitalCRFOrderEntry_Insert]",
				new DataParameter("@CapexID",                   @CapexID,                   LinqToDB.DataType.VarChar),
				new DataParameter("@LineItem",                  @LineItem,                  LinqToDB.DataType.VarChar),
				new DataParameter("@CWIP",                      @CWIP,                      LinqToDB.DataType.VarChar),
				new DataParameter("@CWIP_Description",          @CWIP_Description,          LinqToDB.DataType.VarChar),
				new DataParameter("@InternalOrder",             @InternalOrder,             LinqToDB.DataType.VarChar),
				new DataParameter("@InternalOrder_Description", @InternalOrder_Description, LinqToDB.DataType.VarChar),
				new DataParameter("@CreatedBy",                 @CreatedBy,                 LinqToDB.DataType.VarChar));
		}

		public partial class CapexCapitalCRFOrderEntryInsertResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexDelUserRight

		public static int CapexDelUserRight(this CapExTSDB dataConnection, string @userid, int? @rightid, string @EMPCode)
		{
			return dataConnection.ExecuteProc("[dbo].[CapexDelUserRight]",
				new DataParameter("@userid",  @userid,  LinqToDB.DataType.VarChar),
				new DataParameter("@rightid", @rightid, LinqToDB.DataType.Int32),
				new DataParameter("@EMPCode", @EMPCode, LinqToDB.DataType.VarChar));
		}

		#endregion

		#region CapexfChkUserRight

		public static IEnumerable<CapexfChkUserRightResult> CapexfChkUserRight(this CapExTSDB dataConnection, string @uid, decimal? @funcid)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexfChkUserRightResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Capexf_chk_user_right]",
				new DataParameter("@uid",    @uid,    LinqToDB.DataType.VarChar),
				new DataParameter("@funcid", @funcid, LinqToDB.DataType.Decimal));
		}

		public partial class CapexfChkUserRightResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexGetApprovalChannel

		public static IEnumerable<CapexGetApprovalChannelResult> CapexGetApprovalChannel(this CapExTSDB dataConnection, decimal? @GTotal, int? @CapexID, string @userid, string @forEMPmaxLimit)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexGetApprovalChannelResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexGetApprovalChannel]",
				new DataParameter("@GTotal",         @GTotal,         LinqToDB.DataType.Decimal),
				new DataParameter("@CapexID",        @CapexID,        LinqToDB.DataType.Int32),
				new DataParameter("@userid",         @userid,         LinqToDB.DataType.VarChar),
				new DataParameter("@forEMPmaxLimit", @forEMPmaxLimit, LinqToDB.DataType.VarChar));
		}

		public partial class CapexGetApprovalChannelResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexGetApprovalChannelTest

		public static IEnumerable<CapexGetApprovalChannelTestResult> CapexGetApprovalChannelTest(this CapExTSDB dataConnection, decimal? @GTotal, int? @CapexID, string @userid)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexGetApprovalChannelTestResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexGetApprovalChannel_test]",
				new DataParameter("@GTotal",  @GTotal,  LinqToDB.DataType.Decimal),
				new DataParameter("@CapexID", @CapexID, LinqToDB.DataType.Int32),
				new DataParameter("@userid",  @userid,  LinqToDB.DataType.VarChar));
		}

		public partial class CapexGetApprovalChannelTestResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexGetApprovalChannelTesting

		public static IEnumerable<CapexGetApprovalChannelTestingResult> CapexGetApprovalChannelTesting(this CapExTSDB dataConnection, decimal? @GTotal, int? @CapexID, string @userid, string @forEMPmaxLimit)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexGetApprovalChannelTestingResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexGetApprovalChannelTesting]",
				new DataParameter("@GTotal",         @GTotal,         LinqToDB.DataType.Decimal),
				new DataParameter("@CapexID",        @CapexID,        LinqToDB.DataType.Int32),
				new DataParameter("@userid",         @userid,         LinqToDB.DataType.VarChar),
				new DataParameter("@forEMPmaxLimit", @forEMPmaxLimit, LinqToDB.DataType.VarChar));
		}

		public partial class CapexGetApprovalChannelTestingResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexSaveUserRight

		public static IEnumerable<CapexSaveUserRightResult> CapexSaveUserRight(this CapExTSDB dataConnection, string @userid, int? @rightid, string @modby)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexSaveUserRightResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexSaveUserRight]",
				new DataParameter("@userid",  @userid,  LinqToDB.DataType.VarChar),
				new DataParameter("@rightid", @rightid, LinqToDB.DataType.Int32),
				new DataParameter("@modby",   @modby,   LinqToDB.DataType.VarChar));
		}

		public partial class CapexSaveUserRightResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexSelCapexType

		public static IEnumerable<CapexSelCapexTypeResult> CapexSelCapexType(this CapExTSDB dataConnection, string @uid, string @comp, string @bu, string @reqtype, string @budget)
		{
			return dataConnection.QueryProc<CapexSelCapexTypeResult>("[dbo].[CapexSel_CapexType]",
				new DataParameter("@uid",     @uid,     LinqToDB.DataType.VarChar),
				new DataParameter("@comp",    @comp,    LinqToDB.DataType.VarChar),
				new DataParameter("@bu",      @bu,      LinqToDB.DataType.VarChar),
				new DataParameter("@reqtype", @reqtype, LinqToDB.DataType.VarChar),
				new DataParameter("@budget",  @budget,  LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelCapexTypeResult
		{
			public int    CTID      { get; set; }
			public string CapexType { get; set; }
		}

		#endregion

		#region CapexSelPlant

		public static IEnumerable<AA1> CapexSelPlant(this CapExTSDB dataConnection)
		{
			return dataConnection.QueryProc<AA1>("[dbo].[CapexSel_Plant]");
		}

		#endregion

		#region CapexSelRightsList

		public static IEnumerable<CapexSelRightsListResult> CapexSelRightsList(this CapExTSDB dataConnection)
		{
			return dataConnection.QueryProc<CapexSelRightsListResult>("[dbo].[CapexSel_RightsList]");
		}

		public partial class CapexSelRightsListResult
		{
			public int    Rid   { get; set; }
			public string RName { get; set; }
		}

		#endregion

		#region CapexSelStatus

		public static IEnumerable<CapexSelStatusResult> CapexSelStatus(this CapExTSDB dataConnection)
		{
			return dataConnection.QueryProc<CapexSelStatusResult>("[dbo].[CapexSel_Status]");
		}

		public partial class CapexSelStatusResult
		{
			public int?   ID          { get; set; }
			public string CapexStatus { get; set; }
		}

		#endregion

		#region CapexSelStatusasUse

		public static IEnumerable<CapexSelStatusasUseResult> CapexSelStatusasUse(this CapExTSDB dataConnection, string @flag)
		{
			return dataConnection.QueryProc<CapexSelStatusasUseResult>("[dbo].[CapexSel_StatusasUse]",
				new DataParameter("@flag", @flag, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelStatusasUseResult
		{
			public int?   ID          { get; set; }
			public string CapexStatus { get; set; }
		}

		#endregion

		#region CapexSelfinanceInputlist

		public static IEnumerable<CapexSelfinanceInputlistResult> CapexSelfinanceInputlist(this CapExTSDB dataConnection, string @RequestNo)
		{
			return dataConnection.QueryProc<CapexSelfinanceInputlistResult>("[dbo].[CapexSelfinanceInputlist]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelfinanceInputlistResult
		{
			public string DocuID   { get; set; }
			public string DocuType { get; set; }
		}

		#endregion

		#region CapexSelPlantAddress

		public static IEnumerable<CapexSelPlantAddressResult> CapexSelPlantAddress(this CapExTSDB dataConnection, string @plantcode)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexSelPlantAddressResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexSelPlantAddress]",
				new DataParameter("@plantcode", @plantcode, LinqToDB.DataType.VarChar));
		}

		public partial class CapexSelPlantAddressResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexUpdateApprovalDetails

		public static IEnumerable<CapexUpdateApprovalDetailsResult> CapexUpdateApprovalDetails(this CapExTSDB dataConnection, string @RequestNo, string @Empid, string @Remarks, string @flag)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexUpdateApprovalDetailsResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexUpdateApprovalDetails]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@Empid",     @Empid,     LinqToDB.DataType.VarChar),
				new DataParameter("@Remarks",   @Remarks,   LinqToDB.DataType.NVarChar),
				new DataParameter("@flag",      @flag,      LinqToDB.DataType.VarChar));
		}

		public partial class CapexUpdateApprovalDetailsResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexUpdateApprovalDetailsOld

		public static IEnumerable<CapexUpdateApprovalDetailsOldResult> CapexUpdateApprovalDetailsOld(this CapExTSDB dataConnection, string @RequestNo, string @Empid, string @Remarks, string @flag)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexUpdateApprovalDetailsOldResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexUpdateApprovalDetails_old]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@Empid",     @Empid,     LinqToDB.DataType.VarChar),
				new DataParameter("@Remarks",   @Remarks,   LinqToDB.DataType.NVarChar),
				new DataParameter("@flag",      @flag,      LinqToDB.DataType.VarChar));
		}

		public partial class CapexUpdateApprovalDetailsOldResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexUpdateApprovalDetailsTest

		public static IEnumerable<CapexUpdateApprovalDetailsTestResult> CapexUpdateApprovalDetailsTest(this CapExTSDB dataConnection, string @RequestNo, string @Empid, string @Remarks, string @flag)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexUpdateApprovalDetailsTestResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexUpdateApprovalDetails_test]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@Empid",     @Empid,     LinqToDB.DataType.VarChar),
				new DataParameter("@Remarks",   @Remarks,   LinqToDB.DataType.NVarChar),
				new DataParameter("@flag",      @flag,      LinqToDB.DataType.VarChar));
		}

		public partial class CapexUpdateApprovalDetailsTestResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexUpdateInterOrderEntry

		public static IEnumerable<CapexUpdateInterOrderEntryResult> CapexUpdateInterOrderEntry(this CapExTSDB dataConnection, string @RequestNo, string @SessionID)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexUpdateInterOrderEntryResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexUpdateInterOrderEntry]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@SessionID", @SessionID, LinqToDB.DataType.VarChar));
		}

		public partial class CapexUpdateInterOrderEntryResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexUSPCapexmaster

		public static IEnumerable<CapexUSPCapexmasterResult> CapexUSPCapexmaster(this CapExTSDB dataConnection, string @Assettype, string @OldAssetCode, string @Budgeted, string @PName, string @PDescription, string @CapitalExpenseAsset, string @Purpose, DateTime? @EdateCompletion, string @PurchaseLocation, DataTable @dtLineItem, decimal? @TotalValueInINR, string @SelectQuote, string @ImportedIndigenous, string @VendorJustification, string @CreatedBy, string @FileGuidValue, string @flag)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexUSPCapexmasterResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexUSPCapexmaster]",
				new DataParameter("@Assettype",           @Assettype,           LinqToDB.DataType.VarChar),
				new DataParameter("@OldAssetCode",        @OldAssetCode,        LinqToDB.DataType.VarChar),
				new DataParameter("@Budgeted",            @Budgeted,            LinqToDB.DataType.VarChar),
				new DataParameter("@PName",               @PName,               LinqToDB.DataType.VarChar),
				new DataParameter("@PDescription",        @PDescription,        LinqToDB.DataType.VarChar),
				new DataParameter("@CapitalExpenseAsset", @CapitalExpenseAsset, LinqToDB.DataType.VarChar),
				new DataParameter("@Purpose",             @Purpose,             LinqToDB.DataType.VarChar),
				new DataParameter("@EdateCompletion",     @EdateCompletion,     LinqToDB.DataType.DateTime),
				new DataParameter("@PurchaseLocation",    @PurchaseLocation,    LinqToDB.DataType.VarChar),
				new DataParameter("@dtLineItem",          @dtLineItem,          LinqToDB.DataType.Structured){ DbType = "[dbo].[CapexdtLineItem]" },
				new DataParameter("@TotalValueInINR",     @TotalValueInINR,     LinqToDB.DataType.Decimal),
				new DataParameter("@SelectQuote",         @SelectQuote,         LinqToDB.DataType.VarChar),
				new DataParameter("@ImportedIndigenous",  @ImportedIndigenous,  LinqToDB.DataType.VarChar),
				new DataParameter("@VendorJustification", @VendorJustification, LinqToDB.DataType.VarChar),
				new DataParameter("@CreatedBy",           @CreatedBy,           LinqToDB.DataType.VarChar),
				new DataParameter("@FileGuidValue",       @FileGuidValue,       LinqToDB.DataType.VarChar),
				new DataParameter("@flag",                @flag,                LinqToDB.DataType.VarChar));
		}

		public partial class CapexUSPCapexmasterResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexUSPCapexmasterDraft

		public static IEnumerable<CapexUSPCapexmasterDraftResult> CapexUSPCapexmasterDraft(this CapExTSDB dataConnection, string @Assettype, string @OldAssetCode, string @Budgeted, string @PName, string @PDescription, string @CapitalExpenseAsset, string @Purpose, DateTime? @EdateCompletion, string @PurchaseLocation, DataTable @dtLineItem, decimal? @TotalValueInINR, string @SelectQuote, string @ImportedIndigenous, string @VendorJustification, string @CreatedBy, string @FileGuidValue, string @flag, string @DrawingList, string @IndentID, string @Benefit, string @IRRPaybackPeriod, string @ProjectedCashOutflow, string @IRRPaybackPeriodValue, string @ProjectedCashOutflowValue, decimal? @CFCAmount)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexUSPCapexmasterDraftResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexUSPCapexmaster_draft]",
				new DataParameter("@Assettype",                 @Assettype,                 LinqToDB.DataType.VarChar),
				new DataParameter("@OldAssetCode",              @OldAssetCode,              LinqToDB.DataType.VarChar),
				new DataParameter("@Budgeted",                  @Budgeted,                  LinqToDB.DataType.VarChar),
				new DataParameter("@PName",                     @PName,                     LinqToDB.DataType.VarChar),
				new DataParameter("@PDescription",              @PDescription,              LinqToDB.DataType.VarChar),
				new DataParameter("@CapitalExpenseAsset",       @CapitalExpenseAsset,       LinqToDB.DataType.VarChar),
				new DataParameter("@Purpose",                   @Purpose,                   LinqToDB.DataType.VarChar),
				new DataParameter("@EdateCompletion",           @EdateCompletion,           LinqToDB.DataType.DateTime),
				new DataParameter("@PurchaseLocation",          @PurchaseLocation,          LinqToDB.DataType.VarChar),
				new DataParameter("@dtLineItem",                @dtLineItem,                LinqToDB.DataType.Structured){ DbType = "[dbo].[CapexdtLineItemListV2]" },
				new DataParameter("@TotalValueInINR",           @TotalValueInINR,           LinqToDB.DataType.Decimal),
				new DataParameter("@SelectQuote",               @SelectQuote,               LinqToDB.DataType.VarChar),
				new DataParameter("@ImportedIndigenous",        @ImportedIndigenous,        LinqToDB.DataType.VarChar),
				new DataParameter("@VendorJustification",       @VendorJustification,       LinqToDB.DataType.VarChar),
				new DataParameter("@CreatedBy",                 @CreatedBy,                 LinqToDB.DataType.VarChar),
				new DataParameter("@FileGuidValue",             @FileGuidValue,             LinqToDB.DataType.VarChar),
				new DataParameter("@flag",                      @flag,                      LinqToDB.DataType.VarChar),
				new DataParameter("@DrawingList",               @DrawingList,               LinqToDB.DataType.VarChar),
				new DataParameter("@IndentID",                  @IndentID,                  LinqToDB.DataType.VarChar),
				new DataParameter("@Benefit",                   @Benefit,                   LinqToDB.DataType.VarChar),
				new DataParameter("@IRRPaybackPeriod",          @IRRPaybackPeriod,          LinqToDB.DataType.VarChar),
				new DataParameter("@ProjectedCashOutflow",      @ProjectedCashOutflow,      LinqToDB.DataType.VarChar),
				new DataParameter("@IRRPaybackPeriodValue",     @IRRPaybackPeriodValue,     LinqToDB.DataType.VarChar),
				new DataParameter("@ProjectedCashOutflowValue", @ProjectedCashOutflowValue, LinqToDB.DataType.VarChar),
				new DataParameter("@CFCAmount",                 @CFCAmount,                 LinqToDB.DataType.Decimal));
		}

		public partial class CapexUSPCapexmasterDraftResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexUSPCapexmasterModified

		public static IEnumerable<CapexUSPCapexmasterModifiedResult> CapexUSPCapexmasterModified(this CapExTSDB dataConnection, string @Assettype, string @OldAssetCode, string @Budgeted, string @PName, string @PDescription, string @CapitalExpenseAsset, string @Purpose, DateTime? @EdateCompletion, string @PurchaseLocation, DataTable @dtLineItem, decimal? @TotalValueInINR, string @SelectQuote, string @ImportedIndigenous, string @VendorJustification, string @CreatedBy, string @FileGuidValue, string @flag, string @DrawingList, string @IndentID, string @Benefit, string @IRRPaybackPeriod, string @ProjectedCashOutflow, string @IRRPaybackPeriodValue, string @ProjectedCashOutflowValue, decimal? @CFCAmount)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexUSPCapexmasterModifiedResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexUSPCapexmaster_Modified]",
				new DataParameter("@Assettype",                 @Assettype,                 LinqToDB.DataType.VarChar),
				new DataParameter("@OldAssetCode",              @OldAssetCode,              LinqToDB.DataType.VarChar),
				new DataParameter("@Budgeted",                  @Budgeted,                  LinqToDB.DataType.VarChar),
				new DataParameter("@PName",                     @PName,                     LinqToDB.DataType.VarChar),
				new DataParameter("@PDescription",              @PDescription,              LinqToDB.DataType.VarChar),
				new DataParameter("@CapitalExpenseAsset",       @CapitalExpenseAsset,       LinqToDB.DataType.VarChar),
				new DataParameter("@Purpose",                   @Purpose,                   LinqToDB.DataType.VarChar),
				new DataParameter("@EdateCompletion",           @EdateCompletion,           LinqToDB.DataType.DateTime),
				new DataParameter("@PurchaseLocation",          @PurchaseLocation,          LinqToDB.DataType.VarChar),
				new DataParameter("@dtLineItem",                @dtLineItem,                LinqToDB.DataType.Structured){ DbType = "[dbo].[CapexdtLineItemListV2]" },
				new DataParameter("@TotalValueInINR",           @TotalValueInINR,           LinqToDB.DataType.Decimal),
				new DataParameter("@SelectQuote",               @SelectQuote,               LinqToDB.DataType.VarChar),
				new DataParameter("@ImportedIndigenous",        @ImportedIndigenous,        LinqToDB.DataType.VarChar),
				new DataParameter("@VendorJustification",       @VendorJustification,       LinqToDB.DataType.VarChar),
				new DataParameter("@CreatedBy",                 @CreatedBy,                 LinqToDB.DataType.VarChar),
				new DataParameter("@FileGuidValue",             @FileGuidValue,             LinqToDB.DataType.VarChar),
				new DataParameter("@flag",                      @flag,                      LinqToDB.DataType.VarChar),
				new DataParameter("@DrawingList",               @DrawingList,               LinqToDB.DataType.VarChar),
				new DataParameter("@IndentID",                  @IndentID,                  LinqToDB.DataType.VarChar),
				new DataParameter("@Benefit",                   @Benefit,                   LinqToDB.DataType.VarChar),
				new DataParameter("@IRRPaybackPeriod",          @IRRPaybackPeriod,          LinqToDB.DataType.VarChar),
				new DataParameter("@ProjectedCashOutflow",      @ProjectedCashOutflow,      LinqToDB.DataType.VarChar),
				new DataParameter("@IRRPaybackPeriodValue",     @IRRPaybackPeriodValue,     LinqToDB.DataType.VarChar),
				new DataParameter("@ProjectedCashOutflowValue", @ProjectedCashOutflowValue, LinqToDB.DataType.VarChar),
				new DataParameter("@CFCAmount",                 @CFCAmount,                 LinqToDB.DataType.Decimal));
		}

		public partial class CapexUSPCapexmasterModifiedResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CapexUSPCapexmasterModifiedTest

		public static IEnumerable<CapexUSPCapexmasterModifiedTestResult> CapexUSPCapexmasterModifiedTest(this CapExTSDB dataConnection, string @Assettype, string @OldAssetCode, string @Budgeted, string @PName, string @PDescription, string @CapitalExpenseAsset, string @Purpose, DateTime? @EdateCompletion, string @PurchaseLocation, DataTable @dtLineItem, decimal? @TotalValueInINR, string @SelectQuote, string @ImportedIndigenous, string @VendorJustification, string @CreatedBy, string @FileGuidValue, string @flag, string @DrawingList, decimal? @MiscExpenses, string @Grid, string @ReqType, decimal? @MaxLimit, string @empPurposecode)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new CapexUSPCapexmasterModifiedTestResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[CapexUSPCapexmaster_Modified_Test]",
				new DataParameter("@Assettype",           @Assettype,           LinqToDB.DataType.VarChar),
				new DataParameter("@OldAssetCode",        @OldAssetCode,        LinqToDB.DataType.VarChar),
				new DataParameter("@Budgeted",            @Budgeted,            LinqToDB.DataType.VarChar),
				new DataParameter("@PName",               @PName,               LinqToDB.DataType.VarChar),
				new DataParameter("@PDescription",        @PDescription,        LinqToDB.DataType.VarChar),
				new DataParameter("@CapitalExpenseAsset", @CapitalExpenseAsset, LinqToDB.DataType.VarChar),
				new DataParameter("@Purpose",             @Purpose,             LinqToDB.DataType.VarChar),
				new DataParameter("@EdateCompletion",     @EdateCompletion,     LinqToDB.DataType.DateTime),
				new DataParameter("@PurchaseLocation",    @PurchaseLocation,    LinqToDB.DataType.VarChar),
				new DataParameter("@dtLineItem",          @dtLineItem,          LinqToDB.DataType.Structured){ DbType = "[dbo].[CapexdtLineItemList]" },
				new DataParameter("@TotalValueInINR",     @TotalValueInINR,     LinqToDB.DataType.Decimal),
				new DataParameter("@SelectQuote",         @SelectQuote,         LinqToDB.DataType.VarChar),
				new DataParameter("@ImportedIndigenous",  @ImportedIndigenous,  LinqToDB.DataType.VarChar),
				new DataParameter("@VendorJustification", @VendorJustification, LinqToDB.DataType.VarChar),
				new DataParameter("@CreatedBy",           @CreatedBy,           LinqToDB.DataType.VarChar),
				new DataParameter("@FileGuidValue",       @FileGuidValue,       LinqToDB.DataType.VarChar),
				new DataParameter("@flag",                @flag,                LinqToDB.DataType.VarChar),
				new DataParameter("@DrawingList",         @DrawingList,         LinqToDB.DataType.VarChar),
				new DataParameter("@MiscExpenses",        @MiscExpenses,        LinqToDB.DataType.Decimal),
				new DataParameter("@Grid",                @Grid,                LinqToDB.DataType.VarChar),
				new DataParameter("@ReqType",             @ReqType,             LinqToDB.DataType.VarChar),
				new DataParameter("@MaxLimit",            @MaxLimit,            LinqToDB.DataType.Decimal),
				new DataParameter("@empPurposecode",      @empPurposecode,      LinqToDB.DataType.VarChar));
		}

		public partial class CapexUSPCapexmasterModifiedTestResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region CustCapexAuditRept

		public static IEnumerable<CustCapexAuditReptResult> CustCapexAuditRept(this CapExTSDB dataConnection)
		{
			return dataConnection.QueryProc<CustCapexAuditReptResult>("[dbo].[cust_capex_Audit_rept]");
		}

		public partial class CustCapexAuditReptResult
		{
			public int?      CapexID                    { get; set; }
			public string    LineItem                   { get; set; }
			public string    ItemName                   { get; set; }
			public string    LocationCode               { get; set; }
			public string    InternalOrder              { get; set; }
			public DateTime? InternalOrder_InsertedDate { get; set; }
		}

		#endregion

		#region CustRept001

		public static IEnumerable<CustRept001Result> CustRept001(this CapExTSDB dataConnection)
		{
			return dataConnection.QueryProc<CustRept001Result>("[dbo].[cust_rept001]");
		}

		public partial class CustRept001Result
		{
			public int       RequestNo                { get; set; }
			public string    Assettype                { get; set; }
			public string    OldAssetCode             { get; set; }
			public string    CapexType                { get; set; }
			public string    FixedAssetsType          { get; set; }
			public string    PName                    { get; set; }
			public string    PDescription             { get; set; }
			public string    CapitalExpenseAsset      { get; set; }
			public string    Purpose                  { get; set; }
			public DateTime? EdateCompletion          { get; set; }
			public string    PurchaseLocation         { get; set; }
			public decimal?  AmountPerUnit            { get; set; }
			public decimal?  NoofUnits                { get; set; }
			public decimal?  TotalValueInINR          { get; set; }
			public string    SelectQuote              { get; set; }
			public string    ImportedIndigenous       { get; set; }
			public string    VendorJustification      { get; set; }
			public int?      Status                   { get; set; }
			public string    CurrentStatus            { get; set; }
			public string    DEPARTMENT_Lvl_1         { get; set; }
			public DateTime? DEPARTMENT_Lvl_1_Date    { get; set; }
			public string    DEPARTMENT_Lvl_1_Remarks { get; set; }
			public string    DEPARTMENT_Lvl_2         { get; set; }
			public DateTime? DEPARTMENT_Lvl_2_Date    { get; set; }
			public string    DEPARTMENT_Lvl_2_Remarks { get; set; }
			public string    FINANCE_Lvl_3            { get; set; }
			public DateTime? FINANCE_Lvl_3_Date       { get; set; }
			public string    FINANCE_Lvl_3_Remarks    { get; set; }
			public string    FINANCEF_Lvl_4           { get; set; }
			public DateTime? FINANCEF_Lvl_4_Date      { get; set; }
			public string    FINANCEF_Lvl_4_Remarks   { get; set; }
			public string    FINANCE_Lvl_5            { get; set; }
			public DateTime? FINANCE_Lvl_5_Date       { get; set; }
			public string    FINANCE_Lvl_5_Remarks    { get; set; }
			public string    MD_Lvl_6                 { get; set; }
			public DateTime? MD_Lvl_6_Date            { get; set; }
			public string    MD_Lvl_6_Remarks         { get; set; }
			public DateTime  CreateDate               { get; set; }
			public string    CreatedBy                { get; set; }
			public DateTime? UpdatedDate              { get; set; }
			public string    UpdatedBy                { get; set; }
			public string    RejectedBy               { get; set; }
			public DateTime? RejectedDate             { get; set; }
			public string    RejectedRemarks          { get; set; }
			public string    ReturnedBy               { get; set; }
			public DateTime? ReturnedDate             { get; set; }
			public string    ReturnedRemarks          { get; set; }
		}

		#endregion

		#region IndentSelPendingforApprovalCount

		public static IEnumerable<IndentSelPendingforApprovalCountResult> IndentSelPendingforApprovalCount(this CapExTSDB dataConnection, string @empid)
		{
			return dataConnection.QueryProc<IndentSelPendingforApprovalCountResult>("[dbo].[Indent_Sel_PendingforApproval_Count]",
				new DataParameter("@empid", @empid, LinqToDB.DataType.VarChar));
		}

		public partial class IndentSelPendingforApprovalCountResult
		{
			public string Indent         { get; set; }
			public int?   PendingRequest { get; set; }
		}

		#endregion

		#region IndentSelValidateReturnReq

		public static IEnumerable<IndentSelValidateReturnReqResult> IndentSelValidateReturnReq(this CapExTSDB dataConnection, string @RequestNo, string @EmpCode)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new IndentSelValidateReturnReqResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[Indent_SelValidateReturnReq]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@EmpCode",   @EmpCode,   LinqToDB.DataType.VarChar));
		}

		public partial class IndentSelValidateReturnReqResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region IndentMasterInsert

		public static IEnumerable<IndentMasterInsertResult> IndentMasterInsert(this CapExTSDB dataConnection, string @IndentID, string @Company, string @BU, string @LocatioWork, string @TypeofWorkDetails, string @EnclosureBQQFile, string @EnclosureDrawingFile, decimal? @RateProposed, string @BudgetType, DateTime? @TentativeStartDate, DateTime? @TentativeCompletionDate, string @ProposedContractorName, string @VendorExistingLocation, string @ContractorDetailsAddressGST, string @Userid, string @CapexType, string @Remarks, string @TagPurchaser, int? @Tat)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new IndentMasterInsertResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[IndentMaster_Insert]",
				new DataParameter("@IndentID",                    @IndentID,                    LinqToDB.DataType.VarChar),
				new DataParameter("@Company",                     @Company,                     LinqToDB.DataType.VarChar),
				new DataParameter("@BU",                          @BU,                          LinqToDB.DataType.VarChar),
				new DataParameter("@LocatioWork",                 @LocatioWork,                 LinqToDB.DataType.VarChar),
				new DataParameter("@TypeofWorkDetails",           @TypeofWorkDetails,           LinqToDB.DataType.VarChar),
				new DataParameter("@EnclosureBQQFile",            @EnclosureBQQFile,            LinqToDB.DataType.VarChar),
				new DataParameter("@EnclosureDrawingFile",        @EnclosureDrawingFile,        LinqToDB.DataType.VarChar),
				new DataParameter("@RateProposed",                @RateProposed,                LinqToDB.DataType.Decimal),
				new DataParameter("@BudgetType",                  @BudgetType,                  LinqToDB.DataType.VarChar),
				new DataParameter("@TentativeStartDate",          @TentativeStartDate,          LinqToDB.DataType.DateTime),
				new DataParameter("@TentativeCompletionDate",     @TentativeCompletionDate,     LinqToDB.DataType.DateTime),
				new DataParameter("@ProposedContractorName",      @ProposedContractorName,      LinqToDB.DataType.VarChar),
				new DataParameter("@VendorExistingLocation",      @VendorExistingLocation,      LinqToDB.DataType.VarChar),
				new DataParameter("@ContractorDetailsAddressGST", @ContractorDetailsAddressGST, LinqToDB.DataType.VarChar),
				new DataParameter("@Userid",                      @Userid,                      LinqToDB.DataType.VarChar),
				new DataParameter("@CapexType",                   @CapexType,                   LinqToDB.DataType.VarChar),
				new DataParameter("@Remarks",                     @Remarks,                     LinqToDB.DataType.NVarChar),
				new DataParameter("@TagPurchaser",                @TagPurchaser,                LinqToDB.DataType.NVarChar),
				new DataParameter("@Tat",                         @Tat,                         LinqToDB.DataType.Int32));
		}

		public partial class IndentMasterInsertResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region IndentSelStatus

		public static IEnumerable<IndentSelStatusResult> IndentSelStatus(this CapExTSDB dataConnection)
		{
			return dataConnection.QueryProc<IndentSelStatusResult>("[dbo].[IndentSel_Status]");
		}

		public partial class IndentSelStatusResult
		{
			public int?   ID          { get; set; }
			public string CapexStatus { get; set; }
		}

		#endregion

		#region IndentUpdateApprovalDetails

		public static IEnumerable<IndentUpdateApprovalDetailsResult> IndentUpdateApprovalDetails(this CapExTSDB dataConnection, string @RequestNo, string @Empid, string @Remarks, string @flag)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new IndentUpdateApprovalDetailsResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[IndentUpdateApprovalDetails]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@Empid",     @Empid,     LinqToDB.DataType.VarChar),
				new DataParameter("@Remarks",   @Remarks,   LinqToDB.DataType.NVarChar),
				new DataParameter("@flag",      @flag,      LinqToDB.DataType.VarChar));
		}

		public partial class IndentUpdateApprovalDetailsResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region IndentView

		public static IEnumerable<IndentViewResult> IndentView(this CapExTSDB dataConnection, string @discode, string @disname, string @userid)
		{
			return dataConnection.QueryProc<IndentViewResult>("[dbo].[IndentView]",
				new DataParameter("@discode", @discode, LinqToDB.DataType.VarChar),
				new DataParameter("@disname", @disname, LinqToDB.DataType.VarChar),
				new DataParameter("@userid",  @userid,  LinqToDB.DataType.VarChar));
		}

		public partial class IndentViewResult
		{
			[Column("Indent ID")                            ] public int      IndentID                          { get; set; }
			                                                  public string   Company                           { get; set; }
			                                                  public string   Comp_code                         { get; set; }
			                                                  public string   BU                                { get; set; }
			[Column("Location of work")                     ] public string   LocationOfWork                    { get; set; }
			[Column("Type of Work Details")                 ] public string   TypeOfWorkDetails                 { get; set; }
			[Column("Rate Proposed")                        ] public decimal? RateProposed                      { get; set; }
			                                                  public string   BudgetType                        { get; set; }
			[Column("Tentative Start Date")                 ] public string   TentativeStartDate                { get; set; }
			[Column("Tentative Completion Date")            ] public string   TentativeCompletionDate           { get; set; }
			[Column("Proposed Contractor Name")             ] public string   ProposedContractorName            { get; set; }
			[Column("Vendor Existing/New for Same Location")] public string   VendorExisting_NewForSameLocation { get; set; }
			[Column("Contractor Details")                   ] public string   ContractorDetails                 { get; set; }
			                                                  public string   CapexType                         { get; set; }
			                                                  public string   RT                                { get; set; }
		}

		#endregion

		#region SaveConversationPost

		public static IEnumerable<SaveConversationPostResult> SaveConversationPost(this CapExTSDB dataConnection, string @filepth, int? @CapexID, string @Remarks, string @PostedBy)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new SaveConversationPostResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[save_conversationPost]",
				new DataParameter("@filepth",  @filepth,  LinqToDB.DataType.NVarChar),
				new DataParameter("@CapexID",  @CapexID,  LinqToDB.DataType.Int32),
				new DataParameter("@Remarks",  @Remarks,  LinqToDB.DataType.NVarChar),
				new DataParameter("@PostedBy", @PostedBy, LinqToDB.DataType.VarChar));
		}

		public partial class SaveConversationPostResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region SelActiveVendorList

		public static IEnumerable<SelActiveVendorListResult> SelActiveVendorList(this CapExTSDB dataConnection, string @CompanyCode)
		{
			return dataConnection.QueryProc<SelActiveVendorListResult>("[dbo].[Sel_ActiveVendorList]",
				new DataParameter("@CompanyCode", @CompanyCode, LinqToDB.DataType.NVarChar));
		}

		public partial class SelActiveVendorListResult
		{
			public string Vendor_Code { get; set; }
			public string Vendor_Name { get; set; }
		}

		#endregion

		#region SelCurrentWithFieldName

		public static IEnumerable<SelCurrentWithFieldNameResult> SelCurrentWithFieldName(this CapExTSDB dataConnection, string @reqNo)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new SelCurrentWithFieldNameResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[SelCurrentWithFieldName]",
				new DataParameter("@reqNo", @reqNo, LinqToDB.DataType.VarChar));
		}

		public partial class SelCurrentWithFieldNameResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region UspCapexCapexTypeMapping

		public static IEnumerable<UspCapexCapexTypeMappingResult> UspCapexCapexTypeMapping(this CapExTSDB dataConnection, string @Types, string @CapexTypeId, string @CapexType, string @CapexTypeDesc, string @CompanyCode, string @BU, string @RequestType, string @BudgetType, string @CreatedBy)
		{
			return dataConnection.QueryProc<UspCapexCapexTypeMappingResult>("[dbo].[USP_Capex_CapexTypeMapping]",
				new DataParameter("@Types",         @Types,         LinqToDB.DataType.NVarChar),
				new DataParameter("@CapexTypeId",   @CapexTypeId,   LinqToDB.DataType.VarChar),
				new DataParameter("@CapexType",     @CapexType,     LinqToDB.DataType.NVarChar),
				new DataParameter("@CapexTypeDesc", @CapexTypeDesc, LinqToDB.DataType.NVarChar),
				new DataParameter("@CompanyCode",   @CompanyCode,   LinqToDB.DataType.VarChar),
				new DataParameter("@BU",            @BU,            LinqToDB.DataType.VarChar),
				new DataParameter("@RequestType",   @RequestType,   LinqToDB.DataType.VarChar),
				new DataParameter("@BudgetType",    @BudgetType,    LinqToDB.DataType.VarChar),
				new DataParameter("@CreatedBy",     @CreatedBy,     LinqToDB.DataType.NVarChar));
		}

		public partial class UspCapexCapexTypeMappingResult
		{
			public int    CTID       { get; set; }
			public string CapexType  { get; set; }
			public string Comp_code  { get; set; }
			public string Des        { get; set; }
			public string BU         { get; set; }
			public string ReqType    { get; set; }
			public string BudgetType { get; set; }
		}

		#endregion

		#region UspCapexSaveCompanyBu

		public static IEnumerable<UspCapexSaveCompanyBuResult> UspCapexSaveCompanyBu(this CapExTSDB dataConnection, string @IndentId, string @CompCode, string @CompDes, string @Bu, string @Status)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new UspCapexSaveCompanyBuResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[USP_Capex_SaveCompanyBu]",
				new DataParameter("@IndentId", @IndentId, LinqToDB.DataType.VarChar),
				new DataParameter("@CompCode", @CompCode, LinqToDB.DataType.VarChar),
				new DataParameter("@CompDes",  @CompDes,  LinqToDB.DataType.VarChar),
				new DataParameter("@Bu",       @Bu,       LinqToDB.DataType.VarChar),
				new DataParameter("@Status",   @Status,   LinqToDB.DataType.VarChar));
		}

		public partial class UspCapexSaveCompanyBuResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region UspCapexSelComBUMaster

		public static IEnumerable<CapexComBUMaster> UspCapexSelComBUMaster(this CapExTSDB dataConnection, string @UserId, string @Company, string @Project)
		{
			return dataConnection.QueryProc<CapexComBUMaster>("[dbo].[USP_Capex_SelComBUMaster]",
				new DataParameter("@UserId",  @UserId,  LinqToDB.DataType.VarChar),
				new DataParameter("@Company", @Company, LinqToDB.DataType.VarChar),
				new DataParameter("@Project", @Project, LinqToDB.DataType.VarChar));
		}

		#endregion

		#region UspCapexSelComProject

		public static IEnumerable<UspCapexSelComProjectResult> UspCapexSelComProject(this CapExTSDB dataConnection, string @Company)
		{
			return dataConnection.QueryProc<UspCapexSelComProjectResult>("[dbo].[USP_Capex_SelComProject]",
				new DataParameter("@Company", @Company, LinqToDB.DataType.VarChar));
		}

		public partial class UspCapexSelComProjectResult
		{
			public int    IndID { get; set; }
			public string BU    { get; set; }
		}

		#endregion

		#region UspCapexSelFirmName

		public static IEnumerable<UspCapexSelFirmNameResult> UspCapexSelFirmName(this CapExTSDB dataConnection, string @UserId)
		{
			return dataConnection.QueryProc<UspCapexSelFirmNameResult>("[dbo].[USP_Capex_SelFirmName]",
				new DataParameter("@UserId", @UserId, LinqToDB.DataType.VarChar));
		}

		public partial class UspCapexSelFirmNameResult
		{
			public string VendorCode { get; set; }
			public string FirmName   { get; set; }
		}

		#endregion

		#region UspCapexSelVendorDtl

		public static IEnumerable<VendorMaster> UspCapexSelVendorDtl(this CapExTSDB dataConnection, string @VendorCode)
		{
			return dataConnection.QueryProc<VendorMaster>("[dbo].[USP_Capex_SelVendorDtl]",
				new DataParameter("@VendorCode", @VendorCode, LinqToDB.DataType.VarChar));
		}

		#endregion

		#region UspCapexSelVendorMaster

		public static IEnumerable<UspCapexSelVendorMasterResult> UspCapexSelVendorMaster(this CapExTSDB dataConnection, string @Types, string @ID, string @ComapnyCode, string @VendorCode, string @FirmName, string @FirmContactNumber, string @Address, string @FirmEmailId, string @City, string @District, string @State, string @Pincode, string @ContactPersonName, string @PersonContactContactNumber, string @ContactPersonEmailIdAdd, string @Gst, string @Remarks, string @CreatedBy)
		{
			return dataConnection.QueryProc<UspCapexSelVendorMasterResult>("[dbo].[USP_Capex_SelVendorMaster]",
				new DataParameter("@Types",                      @Types,                      LinqToDB.DataType.VarChar),
				new DataParameter("@ID",                         @ID,                         LinqToDB.DataType.VarChar),
				new DataParameter("@ComapnyCode",                @ComapnyCode,                LinqToDB.DataType.VarChar),
				new DataParameter("@VendorCode",                 @VendorCode,                 LinqToDB.DataType.VarChar),
				new DataParameter("@FirmName",                   @FirmName,                   LinqToDB.DataType.VarChar),
				new DataParameter("@FirmContactNumber",          @FirmContactNumber,          LinqToDB.DataType.VarChar),
				new DataParameter("@Address",                    @Address,                    LinqToDB.DataType.VarChar),
				new DataParameter("@FirmEmailId",                @FirmEmailId,                LinqToDB.DataType.VarChar),
				new DataParameter("@City",                       @City,                       LinqToDB.DataType.VarChar),
				new DataParameter("@District",                   @District,                   LinqToDB.DataType.VarChar),
				new DataParameter("@State",                      @State,                      LinqToDB.DataType.VarChar),
				new DataParameter("@Pincode",                    @Pincode,                    LinqToDB.DataType.VarChar),
				new DataParameter("@ContactPersonName",          @ContactPersonName,          LinqToDB.DataType.VarChar),
				new DataParameter("@PersonContactContactNumber", @PersonContactContactNumber, LinqToDB.DataType.VarChar),
				new DataParameter("@ContactPersonEmailIdAdd",    @ContactPersonEmailIdAdd,    LinqToDB.DataType.VarChar),
				new DataParameter("@Gst",                        @Gst,                        LinqToDB.DataType.VarChar),
				new DataParameter("@Remarks",                    @Remarks,                    LinqToDB.DataType.VarChar),
				new DataParameter("@CreatedBy",                  @CreatedBy,                  LinqToDB.DataType.VarChar));
		}

		public partial class UspCapexSelVendorMasterResult
		{
			public int    Id                  { get; set; }
			public string Vendor_Code         { get; set; }
			public string CompanyCode         { get; set; }
			public string Firm_Name           { get; set; }
			public string Firm_Contact_Number { get; set; }
			public string Firm_Email_Address  { get; set; }
			public string City                { get; set; }
		}

		#endregion

		#region UspCapexPayApprovalCatEmpMapping

		public static IEnumerable<UspCapexPayApprovalCatEmpMappingResult> UspCapexPayApprovalCatEmpMapping(this CapExTSDB dataConnection, string @Types, string @CapexId, string @ID, string @CPACID, string @EmpCode, string @AmountFrom, string @AmountTO, string @Department_lvl_1, string @Department_lvl_2, string @Finance_lvl_3, string @Finance_lvl_4, string @Finance_lvl_5, string @MD_Lvl_6, string @Remarks, bool? @IsActive, string @CreatedBy)
		{
			return dataConnection.QueryProc<UspCapexPayApprovalCatEmpMappingResult>("[dbo].[USP_CapexPayApprovalCat_EMP_Mapping]",
				new DataParameter("@Types",            @Types,            LinqToDB.DataType.NVarChar),
				new DataParameter("@CapexId",          @CapexId,          LinqToDB.DataType.VarChar),
				new DataParameter("@ID",               @ID,               LinqToDB.DataType.VarChar),
				new DataParameter("@CPACID",           @CPACID,           LinqToDB.DataType.VarChar),
				new DataParameter("@EmpCode",          @EmpCode,          LinqToDB.DataType.VarChar),
				new DataParameter("@AmountFrom",       @AmountFrom,       LinqToDB.DataType.VarChar),
				new DataParameter("@AmountTO",         @AmountTO,         LinqToDB.DataType.VarChar),
				new DataParameter("@Department_lvl_1", @Department_lvl_1, LinqToDB.DataType.VarChar),
				new DataParameter("@Department_lvl_2", @Department_lvl_2, LinqToDB.DataType.VarChar),
				new DataParameter("@Finance_lvl_3",    @Finance_lvl_3,    LinqToDB.DataType.VarChar),
				new DataParameter("@Finance_lvl_4",    @Finance_lvl_4,    LinqToDB.DataType.VarChar),
				new DataParameter("@Finance_lvl_5",    @Finance_lvl_5,    LinqToDB.DataType.VarChar),
				new DataParameter("@MD_Lvl_6",         @MD_Lvl_6,         LinqToDB.DataType.VarChar),
				new DataParameter("@Remarks",          @Remarks,          LinqToDB.DataType.VarChar),
				new DataParameter("@IsActive",         @IsActive,         LinqToDB.DataType.Boolean),
				new DataParameter("@CreatedBy",        @CreatedBy,        LinqToDB.DataType.VarChar));
		}

		public partial class UspCapexPayApprovalCatEmpMappingResult
		{
			public int     CPACID     { get; set; }
			public int     CapexID    { get; set; }
			public string  CapexType  { get; set; }
			public decimal AmountForm { get; set; }
			public decimal AmountTo   { get; set; }
			public string  Dept_1     { get; set; }
			public string  Dept_2     { get; set; }
			public string  Fin_3      { get; set; }
			public string  Fin_4      { get; set; }
			public string  Fin_5      { get; set; }
			public string  MD_6       { get; set; }
		}

		#endregion

		#region UspDashboard

		public static IEnumerable<UspDASHBOARDResult> UspDashboard(this CapExTSDB dataConnection, string @UserId)
		{
			return dataConnection.QueryProc<UspDASHBOARDResult>("[dbo].[USP_DASHBOARD]",
				new DataParameter("@UserId", @UserId, LinqToDB.DataType.NVarChar));
		}

		public partial class UspDASHBOARDResult
		{
			public int? IndentCreatedByUser      { get; set; }
			public int? IndentPendingForApproval { get; set; }
			public int? TotalNfaCreated          { get; set; }
			public int? NfaPendingForApproval    { get; set; }
		}

		#endregion

		#region UspEmployeeCompanyMapping

		public static IEnumerable<UspEmployeeCompanyMappingResult> UspEmployeeCompanyMapping(this CapExTSDB dataConnection, string @Types, string @UserId, string @CompanyIds, string @CreatedBy)
		{
			return dataConnection.QueryProc<UspEmployeeCompanyMappingResult>("[dbo].[USP_EmployeeCompanyMapping]",
				new DataParameter("@Types",      @Types,      LinqToDB.DataType.NVarChar),
				new DataParameter("@UserId",     @UserId,     LinqToDB.DataType.NVarChar),
				new DataParameter("@CompanyIds", @CompanyIds, LinqToDB.DataType.NVarChar),
				new DataParameter("@CreatedBy",  @CreatedBy,  LinqToDB.DataType.NVarChar));
		}

		public partial class UspEmployeeCompanyMappingResult
		{
			public int    Id         { get; set; }
			public string EmpCode    { get; set; }
			public string CompanyIds { get; set; }
		}

		#endregion

		#region UspSaveIndentMappingRight

		public static IEnumerable<UspSaveIndentMappingRightResult> UspSaveIndentMappingRight(this CapExTSDB dataConnection, string @CompanyCode, string @EmployeeCode, string @Approver1, string @Approver2)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new UspSaveIndentMappingRightResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[USP_Save_IndentMapping_Right]",
				new DataParameter("@CompanyCode",  @CompanyCode,  LinqToDB.DataType.NVarChar),
				new DataParameter("@EmployeeCode", @EmployeeCode, LinqToDB.DataType.NVarChar),
				new DataParameter("@Approver1",    @Approver1,    LinqToDB.DataType.NVarChar),
				new DataParameter("@Approver2",    @Approver2,    LinqToDB.DataType.NVarChar));
		}

		public partial class UspSaveIndentMappingRightResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region UspVendorQuotation

		public static IEnumerable<UspVendorQuotationResult> UspVendorQuotation(this CapExTSDB dataConnection, string @Types, string @RequestNo, string @VendorCode)
		{
			return dataConnection.QueryProc<UspVendorQuotationResult>("[dbo].[USP_VendorQuotation]",
				new DataParameter("@Types",      @Types,      LinqToDB.DataType.NVarChar),
				new DataParameter("@RequestNo",  @RequestNo,  LinqToDB.DataType.NVarChar),
				new DataParameter("@VendorCode", @VendorCode, LinqToDB.DataType.NVarChar));
		}

		public partial class UspVendorQuotationResult
		{
			public string   LineItem      { get; set; }
			public string   ItemName      { get; set; }
			public string   UOM           { get; set; }
			public decimal? Quantity      { get; set; }
			public decimal? InitialRate   { get; set; }
			public decimal? InitialAmount { get; set; }
			public decimal? FinalRate     { get; set; }
			public decimal? FinalAmount   { get; set; }
			public decimal? Tax           { get; set; }
			public decimal? TotalWithTax  { get; set; }
			public string   Remarks       { get; set; }
		}

		#endregion

		#region WebApiCapexSelApprovalCapexQuoteDetails

		public static IEnumerable<WebApiCapexSelApprovalCapexQuoteDetailsResult> WebApiCapexSelApprovalCapexQuoteDetails(this CapExTSDB dataConnection, string @RequestNo)
		{
			return dataConnection.QueryProc<WebApiCapexSelApprovalCapexQuoteDetailsResult>("[dbo].[WebApi_Capex_SelApprovalCapexQuoteDetails]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar));
		}

		public partial class WebApiCapexSelApprovalCapexQuoteDetailsResult
		{
			public decimal  FileID          { get; set; }
			public string   filepth         { get; set; }
			public string   FileType        { get; set; }
			public decimal? QuotationAmount { get; set; }
		}

		#endregion

		#region WebApiCapexSelRnDList

		public static IEnumerable<WebApiCapexSelRnDListResult> WebApiCapexSelRnDList(this CapExTSDB dataConnection, string @RequestNo)
		{
			return dataConnection.QueryProc<WebApiCapexSelRnDListResult>("[dbo].[WebApi_Capex_SelRnDList]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar));
		}

		public partial class WebApiCapexSelRnDListResult
		{
			public string pth     { get; set; }
			public string filepth { get; set; }
			public string Remarks { get; set; }
		}

		#endregion

		#region WebApiCapexUpdateApprovalDetails

		public static IEnumerable<WebApiCapexUpdateApprovalDetailsResult> WebApiCapexUpdateApprovalDetails(this CapExTSDB dataConnection, string @RequestNo, string @Empid, string @Remarks, string @flag)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new WebApiCapexUpdateApprovalDetailsResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[WebApi_CapexUpdateApprovalDetails]",
				new DataParameter("@RequestNo", @RequestNo, LinqToDB.DataType.VarChar),
				new DataParameter("@Empid",     @Empid,     LinqToDB.DataType.VarChar),
				new DataParameter("@Remarks",   @Remarks,   LinqToDB.DataType.NVarChar),
				new DataParameter("@flag",      @flag,      LinqToDB.DataType.VarChar));
		}

		public partial class WebApiCapexUpdateApprovalDetailsResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion
	}

	public static partial class SqlFunctions
	{
		#region CapexFunSelCurrentWith

		[Sql.Function(Name="dbo.Capex_fun_SelCurrentWith", ServerSideOnly=true)]
		public static string CapexFunSelCurrentWith(string @ReqNO)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region CapexFunSelCurrentWithFieldName

		[Sql.Function(Name="dbo.Capex_fun_SelCurrentWithFieldName", ServerSideOnly=true)]
		public static string CapexFunSelCurrentWithFieldName(string @ReqNO)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region CapexFunSelEmail

		[Sql.Function(Name="dbo.Capex_fun_SelEmail", ServerSideOnly=true)]
		public static string CapexFunSelEmail(string @EmpCode)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region CapexFunSelEmpName

		[Sql.Function(Name="dbo.Capex_fun_SelEmpName", ServerSideOnly=true)]
		public static string CapexFunSelEmpName(string @EmpCode)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region CapexIsPrintPdf

		[Sql.Function(Name="dbo.Capex_isPrintPdf", ServerSideOnly=true)]
		public static string CapexIsPrintPdf(string @CapexID)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region IndentFunSelCurrentWith

		[Sql.Function(Name="dbo.Indent_fun_SelCurrentWith", ServerSideOnly=true)]
		public static string IndentFunSelCurrentWith(string @ReqNO)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region IndentFunSelCurrentWithFieldName

		[Sql.Function(Name="dbo.Indent_fun_SelCurrentWithFieldName", ServerSideOnly=true)]
		public static string IndentFunSelCurrentWithFieldName(string @ReqNO)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region IndentIsPrintPdf

		[Sql.Function(Name="dbo.Indent_isPrintPdf", ServerSideOnly=true)]
		public static string IndentIsPrintPdf(string @IndentID)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RemoveDups

		[Sql.Function(Name="dbo.RemoveDups", ServerSideOnly=true)]
		public static string RemoveDups(string @S, string @T)
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static CapexComBUMaster Find(this ITable<CapexComBUMaster> table, string CompCode, string BU)
		{
			return table.FirstOrDefault(t =>
				t.CompCode == CompCode &&
				t.BU       == BU);
		}

		public static CapexFAttachment Find(this ITable<CapexFAttachment> table, decimal Fileid)
		{
			return table.FirstOrDefault(t =>
				t.Fileid == Fileid);
		}

		public static CapexInitRecipient Find(this ITable<CapexInitRecipient> table, string RequestorCode, string RecipientsCode, bool IsActive)
		{
			return table.FirstOrDefault(t =>
				t.RequestorCode  == RequestorCode  &&
				t.RecipientsCode == RecipientsCode &&
				t.IsActive       == IsActive);
		}

		public static CapexMaster Find(this ITable<CapexMaster> table, int RequestNo)
		{
			return table.FirstOrDefault(t =>
				t.RequestNo == RequestNo);
		}

		public static CapexMasterItem Find(this ITable<CapexMasterItem> table, int CMIID)
		{
			return table.FirstOrDefault(t =>
				t.CMIID == CMIID);
		}

		public static CapexNature Find(this ITable<CapexNature> table, int CNID)
		{
			return table.FirstOrDefault(t =>
				t.CNID == CNID);
		}

		public static CapexPayApprovalCat Find(this ITable<CapexPayApprovalCat> table, int CPACID)
		{
			return table.FirstOrDefault(t =>
				t.CPACID == CPACID);
		}

		public static CapexPayApprovalCatEmpMapping Find(this ITable<CapexPayApprovalCatEmpMapping> table, int CapexID, string EMPCode)
		{
			return table.FirstOrDefault(t =>
				t.CapexID == CapexID &&
				t.EMPCode == EMPCode);
		}

		public static CapexPlant Find(this ITable<CapexPlant> table, string PlantCode)
		{
			return table.FirstOrDefault(t =>
				t.PlantCode == PlantCode);
		}

		public static CapexRightsMaster Find(this ITable<CapexRightsMaster> table, int Rid)
		{
			return table.FirstOrDefault(t =>
				t.Rid == Rid);
		}

		public static CapexTypeMaster Find(this ITable<CapexTypeMaster> table, int CTID)
		{
			return table.FirstOrDefault(t =>
				t.CTID == CTID);
		}

		public static CapexUserRightsMaster Find(this ITable<CapexUserRightsMaster> table, int Rid, string EmpCode)
		{
			return table.FirstOrDefault(t =>
				t.Rid     == Rid &&
				t.EmpCode == EmpCode);
		}

		public static VendorMaster Find(this ITable<VendorMaster> table, string VendorCode)
		{
			return table.FirstOrDefault(t =>
				t.VendorCode == VendorCode);
		}
	}
}
